<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hellojunyi.github.io/</id>
    <title>后院自留地</title>
    <updated>2021-07-13T08:31:35.848Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hellojunyi.github.io/"/>
    <link rel="self" href="https://hellojunyi.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://hellojunyi.github.io/images/avatar.png</logo>
    <icon>https://hellojunyi.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 后院自留地</rights>
    <entry>
        <title type="html"><![CDATA[健身训练]]></title>
        <id>https://hellojunyi.github.io/post/jian-shen-xun-lian/</id>
        <link href="https://hellojunyi.github.io/post/jian-shen-xun-lian/">
        </link>
        <updated>2021-07-13T08:16:50.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>这是一个健身up的视频笔记。这个up主视频精短，且很多适合无器械在家锻炼，非常受用。所有笔记视频来之up的<a href="https://space.bilibili.com/66391032?spm_id_from=333.788.b_765f7570696e666f.2">【B站】</a>和<a href="https://www.youtube.com/channel/UCFd-9jAfbuUjwDZjisOwv1w">【Youtube】</a>。</p>
<h2 id="1-体型-久坐紧张缓解训练">1 体型--久坐紧张缓解训练</h2>
<p>视频：【细思极恐!】这个习惯正在让你慢慢变丑!</p>
<img src="https://i.loli.net/2021/07/13/GAQIKjuU5tsFRol.jpg" style="zoom:50%;" />
<h2 id="1-体型-告别圆肩驼背">1 体型--告别圆肩驼背</h2>
<p>视频：【纠正体态】3步教你快速告别圆肩驼背!(新手必看)</p>
<p><strong>在生活中改变你的体态</strong></p>
<p><strong>拉伸放松--紧张肌群（每天早晨）</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">每天早晨拉伸放松紧张肌群（动作）</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>背阔+肩膀拉伸</strong></td>
<td style="text-align:center"><strong>2组每组30秒</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>胸部+胸推拉伸</strong></td>
<td style="text-align:center"><strong>2组每组30秒</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>颈部+上斜方拉伸</strong></td>
<td style="text-align:center"><strong>2组每边各30秒</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>背阔+髋屈肌拉伸</strong></td>
<td style="text-align:center"><strong>2组每边各30秒</strong></td>
</tr>
</tbody>
</table>
<p><strong>激活强化--薄弱肌群（训练时）</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">训练时激活强化薄弱肌群（动作）</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>&quot;I.T.Y&quot;收缩</strong></td>
<td style="text-align:center"><strong>3组每组20次</strong></td>
</tr>
</tbody>
</table>
<h2 id="2-减脂-那种运动最减脂">2 减脂--那种运动最减脂</h2>
<p>视频：【到底哪种运动最减脂-】如何加快减脂速度！</p>
<p><strong>1 长时间维持中高心率水平</strong></p>
<p>​	<strong>最佳心率 = 220-年龄 x 60%~70%</strong>  心率（脂肪利用率增加）</p>
<p><strong>2.多做力量训练</strong></p>
<img src="https://i.loli.net/2021/07/13/AUWfSwTxRbyB8ZC.jpg" style="zoom:50%;" />
<h2 id="2-减脂-10分钟脂肪消减训练">2 减脂--10分钟脂肪消减训练</h2>
<p>视频：【每天一遍】10分钟脂肪消减训练(男女通用)</p>
<img src="https://i.loli.net/2021/07/13/bJ4qBlPS6k3d7Yi.jpg" style="zoom: 67%;" />
<h2 id="3-腹肌-8分钟高效腹肌训练">3 腹肌--8分钟高效腹肌训练</h2>
<p>视频：【精准刺激】8分钟高效腹肌训练 (男女通用)</p>
<img src="https://i.loli.net/2021/07/13/6jzv1HEGVdTmuU9.jpg" style="zoom: 50%;" />
<h2 id="3-腹肌-6分钟高效腹肌训练">3 腹肌--6分钟高效腹肌训练</h2>
<p>视频：【无器械】6分钟高效腹肌训练(男女通用）</p>
<img src="https://i.loli.net/2021/07/13/VpwARY2Tx7reG6b.jpg" style="zoom: 67%;" />
<h2 id="4-胸肌-5分钟高效胸肌训练">4 胸肌--5分钟高效胸肌训练</h2>
<p>视频：【在家练出完美胸肌-!】5分钟高效胸肌训练(新手必看)</p>
<p>1 体脂率 13~15% 或者 16~19%</p>
<p>2 增加整体胸部的肌肉量（胸肌的厚度）</p>
<p>3 基因</p>
<h2 id="4-胸肌-打造完美胸型">4 胸肌--打造完美胸型</h2>
<p>视频：【拯救雌化】如何去除脂肪胸,打造完美胸型！</p>
<img src="https://i.loli.net/2021/07/13/Pst3dvhT67O8HMD.jpg" style="zoom: 67%;" />
<h2 id="5-拉伸-科学有效的热身">5 拉伸--科学有效的热身</h2>
<p>视频：【不要再这样拉伸了!】如何科学有效的热身!</p>
<p>热身 不等于 拉伸</p>
<p><strong>静态拉伸</strong> ：保持拉伸姿势不动15-30秒以上（不适合运动前应用）</p>
<p><strong>动态拉伸</strong>：不在拉伸点上停留</p>
<p><strong>筋膜放松</strong>：通过施加外力放松筋膜</p>
<p><strong>热身目的</strong>：提高心率和体温，令大脑兴奋。适度的低强度有氧活动（如跳绳，跑步，控制时间3~5分钟，微微出汗就可以）</p>
<p><strong>运动前热身</strong>（力量或跑跳性运动），应该是动态拉伸+筋膜放松，避免受伤。</p>
<p><strong>完整的热身</strong></p>
<img src="https://i.loli.net/2021/07/13/S1lqnQwgyvXbWd2.jpg" style="zoom: 33%;" />
<p><strong>动态拉伸--上半身：</strong></p>
<img src="https://i.loli.net/2021/07/13/NuxtVsSbYy5i6Qv.jpg" style="zoom: 33%;" />
<p><strong>动态拉伸--下半身：</strong></p>
<img src="https://i.loli.net/2021/07/13/BXdcJiltqsIyP7S.jpg" style="zoom:33%;" />
<h2 id="6-习惯-如何做选择">6 习惯--如何做选择</h2>
<p>视频：我为什么不做“健身”视频了</p>
<p><strong>如何做出选择？价值观--决定选择</strong></p>
<pre><code>1 到底用不用做选择--可否同时选择
2 多方面了解自己--用批判性思维了解自己，避免认知偏差。
3 想象将来你希望变成的人以及生活状态
</code></pre>
<p>想象自己3年后的生活状态。回头考虑现在什么选择可以帮助你变成这样的人</p>
<h2 id="6-习惯-良好的习惯">6 习惯--良好的习惯</h2>
<p>视频：这个习惯改变了我的人生</p>
<p><strong>1.自控能力是一个有限的资源，我们每天做的任何事，任何决定都是在消耗这个有限资源。</strong></p>
<p><strong>2.最害怕，最困难，最痛苦的事放在每天的第一件事来做（早晨是自控能力巅峰时期）</strong></p>
<table>
<thead>
<tr>
<th><strong>1 远离手机</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>2 两分钟法则（把任务拆分为小任务）</strong></td>
</tr>
<tr>
<td><strong>3 实施意向，写计划（时间地点任务）</strong></td>
</tr>
<tr>
<td><strong>养成1个好习惯：每天30分钟，30天，做1件事</strong></td>
</tr>
</tbody>
</table>
<p><strong>3.挑战困难，让人成长，减少焦虑，会有充实感</strong>。</p>
<h2 id="6-习惯-早晨做这4件事帮你快速起床">6 习惯--早晨做这4件事帮你快速起床</h2>
<p>视频：【克服懒惰】早晨做这4件事帮你快速起床!</p>
<img src="https://i.loli.net/2021/07/13/YTn3J6Qdx5e8uFw.jpg" style="zoom: 67%;" />]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[跟着王老师学：Excel数据透视表]]></title>
        <id>https://hellojunyi.github.io/post/gen-zhao-wang-lao-shi-xue-excel-shu-ju-tou-shi-biao/</id>
        <link href="https://hellojunyi.github.io/post/gen-zhao-wang-lao-shi-xue-excel-shu-ju-tou-shi-biao/">
        </link>
        <updated>2021-07-12T08:32:32.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2021/07/12/rEQiWzBbyKc9vAH.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[EXCEL常用函数+图表+可视化]]></title>
        <id>https://hellojunyi.github.io/post/excel-chang-yong-han-shu-tu-biao-ke-shi-hua/</id>
        <link href="https://hellojunyi.github.io/post/excel-chang-yong-han-shu-tu-biao-ke-shi-hua/">
        </link>
        <updated>2021-07-08T12:46:54.000Z</updated>
        <content type="html"><![CDATA[<p>Excel图表与可视化</p>
<h3 id="excel中常用的9个函数">EXCEL中常用的9个函数</h3>
<img src="https://i.loli.net/2021/07/08/svaxeIh3DwJF5uY.jpg" style="zoom:80%;" />
<h3 id="excel常用的10个图表">Excel常用的10个图表</h3>
<img src="https://i.loli.net/2021/07/08/4ImzGrptuKPydTE.png" style="zoom:80%;" />
<h3 id="excel数据可视化6大工具">Excel数据可视化6大工具</h3>
<img src="https://i.loli.net/2021/07/08/cIKqhgObPYBfpsD.jpg" style="zoom:80%;" />]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQL代码笔记]]></title>
        <id>https://hellojunyi.github.io/post/sql-dai-ma-bi-ji/</id>
        <link href="https://hellojunyi.github.io/post/sql-dai-ma-bi-ji/">
        </link>
        <updated>2021-07-01T16:03:05.000Z</updated>
        <summary type="html"><![CDATA[<p>此为B站：<a href="https://www.bilibili.com/video/BV177411U7Yr?p=1">3小时掌握Mysql基础语法</a>，学习笔记。</p>
]]></summary>
        <content type="html"><![CDATA[<p>此为B站：<a href="https://www.bilibili.com/video/BV177411U7Yr?p=1">3小时掌握Mysql基础语法</a>，学习笔记。</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2021/07/02/Fd8SWcfrxj6R7LI.png" alt="" loading="lazy"></figure>
<h3 id="第2课-第一条sql语句">第2课--第一条SQL语句</h3>
<p><strong>第一句SQL语句 : select……from……</strong></p>
<pre><code class="language-mysql">use world; # 选择数据库 
select id,name,countrycode,district,population
from world.city; # 指定数据库的表 
</code></pre>
<h3 id="第3课-了解sql-show">第3课--了解sql : show</h3>
<pre><code class="language-mysql">show databases;
show tables;
show columns from city;
</code></pre>
<h3 id="第4课-排序-order-by">第4课--排序 order by</h3>
<p><strong>asc 降序，desc 升序</strong></p>
<p><strong>limit 限制行数</strong></p>
<pre><code class="language-mysql">use world;
select id,name,countrycode,district,population
from world.city order by name asc; # 降序 asc

select id,name,countrycode,district,population
from world.city order by population desc; # 升序 desc 

select id,name,countrycode,district,population
from world.city order by CountryCode asc,population asc limit 5; #升序 升序 限制

select id,name,countrycode,district,population
from world.city order by population desc; # 升序 desc 

select id,name,countrycode,district,population
from world.city order by CountryCode asc,population asc limit 5; #升序 升序 限制
</code></pre>
<h3 id="第5课-过滤数据-where">第5课--过滤数据 where</h3>
<p><strong>where...and/or，in/not in</strong></p>
<pre><code class="language-mysql">select id,name,countrycode,district,population
from world.city 
where population &gt;= 1000 and population &lt;=10000000 
	and (CountryCode = &quot;ago&quot; or countrycode =  &quot;ARG&quot;)  #与 and countrycode in (&quot;AGO&quot;,&quot;ARG&quot;) 相同
order by countrycode asc,population asc limit 10;
#注意：sql不分大小写 ，即使是列名
</code></pre>
<h3 id="第6课-通配符">第6课--通配符</h3>
<p><strong>需要用like配合 ，百分号（%）与下划线(_)</strong></p>
<pre><code class="language-mysql">select id,name,countrycode,district,population
from world.city 
where name like &quot;Ab%&quot; and name like &quot;%d&quot;; # ab AB 不区分大小写
select id,name,countrycode,district,population
from world.city 
</code></pre>
<p><strong>where name like &quot;Ab_&quot; ;  # (_)三个空格</strong><br>
<strong>注意空格 去空格 rtrim(),ltrim()</strong><br>
<strong>注意null值</strong></p>
<h3 id="第7课-函数-文本">第7课--函数  文本</h3>
<p><strong>处理文本 Rtrim() ，Ltrim() 删去左右空格；left(),right()返回字符串的左右第几位</strong></p>
<p><strong>length() 字符串长度；upper()，lower()字符串大小写；substring（）字符串子集</strong></p>
<pre><code class="language-mysql">select id,name,countrycode,district,population,length(name) as len_name
from world.city limit 10; # length()的使用 

select id,name,countrycode,district,population,length(name) as len_name
from world.city where length(name) = 5; # length()的使用 

select id,name,countrycode,district,population,substring(name,3,100) as sub_name
from world.city where length(name) = 5; # substring()的用法

select id,name,countrycode,district,population,right(name,3) as rig_name
from world.city where length(name) = 5; # right(),left()的用法 

select id,name,countrycode,district,population,lower(name) as upp_name
from world.city where length(name) = 5; # upper(),lower()的用法
</code></pre>
<h3 id="第8课-函数-日期和时间">第8课--函数 日期和时间</h3>
<p><strong>curdate() ，curtime()， datediff()</strong></p>
<p><strong>date()，year()，month()，day()，time()……</strong></p>
<pre><code class="language-mysql">select curtime();
show columns from sys.sys_config; # 显示列名 
select * from sys.sys_config; # 选取整个数据表（列名在表头）
select * from sys_config where date(set_time)=&quot;2021-06-23&quot;; # date()的使用
select * from sys_config where year(set_time)=&quot;2021&quot; and month(set_time)=&quot;6&quot;;# year() month() 使用
select datediff(now(),set_time) from sys_config; # now()是现在的日期，datediff比较的是日期 
</code></pre>
<h3 id="第9课-数值函数">第9课--数值函数</h3>
<p><strong>聚合函数：返回的都是单个值函数</strong></p>
<p><strong>avg/count/max/min/sum, distinct 唯一值</strong></p>
<pre><code class="language-Mysql">use world; 
select max(population),min(population),avg(population),sum(population),count(population) from world.city;
#不会计算null值
select count(*) from city; # 计算有多少数行，但是不包含null
select distinct countrycode from city; # 唯一值 在select后面 
select distinct countrycode,name,id from city; # 唯一值(countrycode &amp; name &amp; id三合一)
select count(distinct countrycode) from city; # 多少的唯一值
#所有的方法都会忽略null值
</code></pre>
<h3 id="10课-分组计算-group-by">10课--分组计算 group by</h3>
<p><strong>分组计算：根据某种分类，进行该组计算,分组的名称跟组名一致</strong></p>
<pre><code class="language-mysql">select countrycode,district,avg(population) as avg_popu,sum(population) as sum_popu 
from world.city 
group by countrycode,district 
order by sum_popu asc;
</code></pre>
<p><strong>having：分组筛选只用having，where是针对每一条样本</strong></p>
<pre><code class="language-mysql">select countrycode,district,avg(population) as avg_popu,sum(population) as sum_popu 
from world.city 
group by countrycode,district 
having avg(population) &gt;=1000000
order by sum(population) asc;
</code></pre>
<h3 id="11课-子查询">11课--子查询</h3>
<pre><code class="language-mysql">select * 
from
(select countrycode,district,avg(population) as avg_popu,sum(population) as sum_popu 
from world.city group by countrycode,district) a
where a.avg_popu &gt;= 100000 order by sum_popu asc;
#() as a ,把（）的当做一个新的表a，在从里面查询 
</code></pre>
<pre><code class="language-mysql">select * from world.city where population &gt;= (select avg(population) from world.city) order by population asc;
#where 可以用子查询，但是比较的必须是唯一单一值 
select * from world.city where population &gt;= (select avg(population) from world.city group by population);
#语句即使可以运行，但是不正确。因为group by是一列数据
</code></pre>
<h3 id="12课-表联结">12课--表联结</h3>
<p><strong>inner join</strong></p>
<pre><code class="language-mysql">select a.*,b.*,c.*
from
(select * from world.city) a
inner join
(select * from country) b
inner join
(select * from countrylanguage) c
on a.countrycode = b.code = c.countrycode;
</code></pre>
<p><strong>left join</strong></p>
<pre><code class="language-mysql">select a.*
from
(select * from world.city) a 
left join
(select * from country limit 100) b
on a.CountryCode = b.code
left join
(select * from countrylanguage) c
on c.CountryCode = a.CountryCode;
</code></pre>
<h3 id="13课-组合查询-union">13课--组合查询 union</h3>
<p><strong>union 把查询结果组合起来</strong></p>
<pre><code class="language-mysql">select id,name from world.city where population &gt;= 1000000
union
select id,name from world.city where population &gt;= 100000
order by id asc;
#select所选得返回项必须要相同，相同的列 
#union会自动去重,union all不去重
#order by 只能放在最后
</code></pre>
<h3 id="14课-表的创建与删除">14课--表的创建与删除</h3>
<pre><code class="language-mysql">use world;
create table if not exists world.xinjianbiao_test1 # 创建表，列名不能重复 
as
select a.id,a.name as name_city,a.countrycode as code_city,a.district,a.population as popu_city,
b.*,c.*
from
(select * from world.city) a 
left join
(select * from country limit 100) b
on a.CountryCode = b.code
left join
(select * from countrylanguage) c
on c.CountryCode = a.CountryCode;

select * from xinjianbiao_test1 limit 100;

drop table if exists world.xinjianbiao_test1; # 丢弃（删除）表
</code></pre>
<h3 id="15课-表的创建自定义列名">15课--表的创建（自定义列名）</h3>
<pre><code class="language-mysql">drop table if exists world.xiaoming_test2;
create table if not exists world.xiaoming_test2
(id int null,
countrycode char(50) not null,
population int,
gnp float,
language char(50),
primary key (id,countrycode,language) # key可以是几列的合并 
);
select * from world.xiaoming_test2
</code></pre>
<h3 id="16课-插入查询-insert-into">16课--插入查询 insert into</h3>
<pre><code class="language-mysql">insert into world.xiaoming_test2
select a.id,a.countrycode,a.population,b.gnp,c.language
from
(select * from world.city) a 
left join
(select * from country limit 100) b
on a.CountryCode = b.code
left join
(select * from countrylanguage) c
on c.CountryCode = a.CountryCode;
</code></pre>
<h3 id="17课-更新表删除表">17课--更新表/删除表</h3>
<pre><code class="language-mysql">alter table world.xiaoming_test2 # alter table 修改表 
add new_name char(80); # 增加一列
select * from world.xiaoming_test2;
alter table world.xiaoming_test2
drop gnp; # 丢弃一列
</code></pre>
<pre><code class="language-mysql">update  world.xiaoming_test2 # 更新数据，一定要用where限定条件。不建议使用 
set population = 0 where id = 129; # set更新数据 
delete from world.xiaoming_test2 # delete是删除数据，drop是丢弃整个表  
where new_name is null;
</code></pre>
<p><strong>使用update与delete前，先用select检验数据，保证正确无误。mysql没有撤销功能。</strong></p>
<h3 id="18课-null值">18课--null值</h3>
<p><strong>null不是空值也不是0，是一种特殊的值，不能做数学运算</strong></p>
<pre><code class="language-mysql">select * from world.xinjianbiao_test1 where code is null;  # 使用is null/is not null
select count(*),count(code)from world.xinjianbiao_test1;  # null值会被忽略计算 
</code></pre>
<p><strong>创建表的时候需注明是否允许列存储null值</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【跟着王老师学Excel VBA 】视频学习笔记]]></title>
        <id>https://hellojunyi.github.io/post/gen-zhao-wang-lao-shi-xue-excel-vba-shi-pin-xue-xi-bi-ji/</id>
        <link href="https://hellojunyi.github.io/post/gen-zhao-wang-lao-shi-xue-excel-vba-shi-pin-xue-xi-bi-ji/">
        </link>
        <updated>2021-02-26T02:20:08.000Z</updated>
        <summary type="html"><![CDATA[<p>本文为B站【跟着王老师学Excel VBA 】视频的学习笔记。以前工作中接触过VBA，发觉VBA使很多重复动作都可以半自动化很方便，但是没人指导又觉VBA高深且难学。王老师这系列的视频，本人觉得对初学者来说非常友好（有趣且易懂），即使不能全都学会（也不用全都会，实际工作不会处处用到），但是对办公工作还是有很多好处。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文为B站【跟着王老师学Excel VBA 】视频的学习笔记。以前工作中接触过VBA，发觉VBA使很多重复动作都可以半自动化很方便，但是没人指导又觉VBA高深且难学。王老师这系列的视频，本人觉得对初学者来说非常友好（有趣且易懂），即使不能全都学会（也不用全都会，实际工作不会处处用到），但是对办公工作还是有很多好处。</p>
<!-- more -->
<p>代码编程这些东西，有刚需要求，才能越写越好。只是看视频做示范，不写过一段时间又忘了。这笔记，就是为了以后如果需要，也可以快速的查阅，快速的拾起VBA的知识。VBA在编程语言中，相对简单易懂，方便编程入门。学懂了VBA对以后学习其他的编程语言，无论在信心还是编程的知识中，还是有不少的帮助。</p>
<h2 id="第1讲">第1讲</h2>
<h3 id="整行-复制-插入粘贴">整行 -- 复制 -- 插入粘贴</h3>
<pre><code>Rows(&quot;1:1&quot;).Select
Selection.Copy
Selection.Insert [shift:=xlDown]       # shift:=xlDown 插入整行下移 
</code></pre>
<h3 id="整行选整行-删除">整行（选整行） -- 删除</h3>
<pre><code>Rows(i &amp; &quot;:&quot; &amp; i).Select
Selection.Delete [shift:=xlUp]
</code></pre>
<h3 id="整行选所在单元格-删除">整行（选所在单元格） -- 删除</h3>
<pre><code>Range(&quot;a1&quot;).Select
[Application.CutCopyMode = False]
Selection.EntireRow.Delete [shift:=xlUp]       # EntireRow 整行
</code></pre>
<h2 id="第2讲-for循环-if判断语句">第2讲 -- For循环 &amp; If判断语句</h2>
<h3 id="for循环select判断数组">For循环，Select判断，数组</h3>
<p><strong>专业代号的判断</strong></p>
<pre><code>Sub 专业代号判断()

Dim arr1(), arr2(), i As Integer

arr1 = Range(&quot;b2:c100&quot;)               # 把range区间赋值给数组（下界为1）
arr2 = Range(&quot;e2:f100&quot;)

For i = 1 To 50
    '判断专业代号
    Select Case arr1(i, 1)            #  即 case = arr（），然后case去匹配
        Case Is = &quot;理工&quot;
            arr1(i, 2) = &quot;LG&quot;
        Case Is = &quot;文科&quot;
            arr1(i, 2) = &quot;WK&quot;
        Case Is = &quot;财经&quot;
            arr1(i, 2) = &quot;CJ&quot;
    End Select
    
    '判断性别
       Select Case arr2(i, 1)
           Case Is = &quot;男&quot;
               arr2(i, 2) = &quot;先生&quot;
           Case Is = &quot;女&quot;
               arr2(i, 2) = &quot;女士&quot;
           Case Is = &quot;&quot;
        GoTo line                     #  GoTo 跳到指定位置，跳出整个循环
       End Select

Next

line:
Range(&quot;b2:c100&quot;) = arr1               #  把数组的值再返回到range区间
Range(&quot;e2:f100&quot;) = arr2

End Sub
</code></pre>
<p>这个例子不需要用到数组，此为是为了尝试使用数组。</p>
<h3 id="if-else-与-select-case-的比较">If Else 与 Select Case 的比较</h3>
<p>个人个税计算练习</p>
<h4 id="if-else">If Else</h4>
<pre><code>Sub eachif判断()

Dim rng As Range
Dim i As Integer
Dim x As Long

i = 1

For Each rng In Range(&quot;c2:c1000&quot;)               # 使用 for each,且使用单元格属性的rng
    
    If rng = &quot;&quot; Then                            # 判断是否有数据，是否继续运行
        GoTo line1
    End If
    
    x = rng - 3500
    i = i + 1
    If x &gt; 80000 Then                           # if条件判断，从上到下顺序，逐一判断
            Range(&quot;f&quot; &amp; i) = x * 0.45 - 13505
        ElseIf x &gt; 55000 Then
            Range(&quot;f&quot; &amp; i) = x * 0.35 - 5505
        ElseIf x &gt; 35000 Then
            Range(&quot;f&quot; &amp; i) = x * 0.3 - 2755
        ElseIf x &gt; 9000 Then
            Range(&quot;f&quot; &amp; i) = x * 0.25 - 1005
        ElseIf x &gt; 4500 Then
            Range(&quot;f&quot; &amp; i) = x * 0.2 - 555
        ElseIf x &gt; 1500 Then
            Range(&quot;f&quot; &amp; i) = x * 0.1 - 105
        ElseIf x &gt; 0 Then
            Range(&quot;f&quot; &amp; i) = x * 0.3
        ElseIf x &lt; 0 Then
            Range(&quot;f&quot; &amp; i) = 0
    End If
Next

line1:

End Sub
</code></pre>
<h4 id="select-case">Select Case</h4>
<pre><code>Sub eachselect判断()

Dim rng As Range
Dim x As Long
Dim i As Integer

i = 1

For Each rng In Range(&quot;c2:c1000&quot;)             # 使用 for each,且使用单元格属性的rng

    If rng = &quot;&quot; Then                          # 判断是否有数据，是否继续运行
       GoTo 300
    End If
    
    '判断范围 
    x = rng - 3500
    i = i + 1
    Select Case x                            # Select匹配判断，从上到下顺序，逐一判断
        Case Is &gt; 80000
            Range(&quot;e&quot; &amp; i) = x * 0.45 - 13505
        Case Is &gt; 55000
            Range(&quot;e&quot; &amp; i) = x * 0.35 - 5505
        Case Is &gt; 35000
            Range(&quot;e&quot; &amp; i) = x * 0.3 - 2755
        Case Is &gt; 9000
            Range(&quot;e&quot; &amp; i) = x * 0.25 - 1005
        Case Is &gt; 4500
            Range(&quot;e&quot; &amp; i) = x * 0.2 - 555
        Case Is &gt; 1500
            Range(&quot;e&quot; &amp; i) = x * 0.1 - 105
        Case Is &gt; 0
            Range(&quot;e&quot; &amp; i) = x * 0.03
        Case Is &lt; 0
            Range(&quot;e&quot; &amp; i) = 0
    End Select
Next

300
    
End Sub
</code></pre>
<h4 id="if课件原代码">If课件原代码</h4>
<pre><code>Sub 测试()

Dim rng1 As Range
Dim x As Integer

For Each rng1 In Range(&quot;c2:c100&quot;)
     If rng1 = &quot;&quot; Then
       Exit For
     End If
    
    x = x + 1
     If rng1 &lt;= 3500 Then
            Range(&quot;d&quot; &amp; x + 1) = 0
       ElseIf rng1 &gt; 3500 And rng1 &lt;= 3500 + 1500 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 3 - 0
       ElseIf rng1 &gt; 3500 + 1500 And rng1 &lt;= 3500 + 4500 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 10 - 105
       ElseIf rng1 &gt; 3500 + 4500 And rng1 &lt;= 3500 + 9000 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 20 - 555
       ElseIf rng1 &gt; 3500 + 9000 And rng1 &lt;= 3500 + 35000 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 25 - 1005
       ElseIf rng1 &gt; 3500 + 35000 And rng1 &lt;= 3500 + 55000 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 30 - 2755
       ElseIf rng1 &gt; 3500 + 55000 And rng1 &lt;= 3500 + 80000 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 35 - 5505
       ElseIf rng1 &gt; 3500 + 80000 Then
            Range(&quot;d&quot; &amp; x + 1) = rng1 * 45 - 13505
    End If
Next

End Sub
</code></pre>
<h3 id="总结">总结</h3>
<p><strong>For</strong> ：适合于有限次数，如2 to 100 ，即99次。step 为步距，<code>step -1</code>，则为负步距。<br>
<strong>For Each</strong>：适合只知道范围，但是不知道具体次数</p>
<p><strong>If Else</strong> ： 适合条件范围判断<br>
<strong>Select Case</strong> ： 适合具体数据匹配判断<br>
判断顺序由高到低，最高层为唯一限定条件，会影响后继的判断。后继判断必须在上层以外（或者上层是下层的子集）。</p>
<h2 id="第3讲-工作表">第3讲 -- 工作表</h2>
<h3 id="基本内容">基本内容</h3>
<p><strong>对象</strong>：worksheet , workbook , range  #工作本，工作薄，单元格<br>
<strong>属性</strong>：Count  , Name<br>
<strong>方法</strong>：Select , Add , Delete , Copy</p>
<h3 id="对象-sheets1">对象 sheets(1)</h3>
<pre><code class="language-co">工作表：sheet1, sheets(“1月”)，sheets(1) 。表的三种形式
单元格：[a1],Range(&quot;a1&quot;)，Cell（1,1）都表示单元格a1，但Range，Cells可以使用i，作为变量使用。
工作表类型：sheet包含worksheet, chart, Ms Excel.
</code></pre>
<h3 id="属性-countname">属性 Count,Name</h3>
<pre><code>Count: Sheets.Count    # 计算表格的数目
Name: Sheets(1).Name   # 表格Sheets（1）的名字
DisplayAlerts          # 警告显示框的属性 Application.DisplayAlerts
</code></pre>
<h3 id="方法-selectadddeletecopy">方法 Select,Add,Delete,Copy</h3>
<pre><code>Delete: Sheets(1).Delete          # Application.DisplayAlerts = False ( True ) 连用， 隐藏跳出窗口
Select: Sheets(1).Select          # 选择Sheets( 1 )
Add: Sheets.Add after:=sheets(1)  # 给参数赋值: 参数名:=? , add 的默认参数为before:=sheets(1)
Copy: Sheets(1).Copy              # 会直接新建文件复制（需保存）。因此一般加参数after:= sheets(?)
</code></pre>
<p><strong>注意Add与Copy的区别</strong>：Add是新建，是空白的工作表。Copy是复制，是原有的表格。前者会在同一个表格，后者默认会新建文件。</p>
<h2 id="第4课-工作薄">第4课 -- 工作薄</h2>
<p><strong>Workbooks 方法</strong><br>
Open，（Active），Save，SaveAs，Close</p>
<p><strong>Workbooks 与 Workbook的区别</strong><br>
Workbooks：不具体指定某个工作薄（带复数，一种类型，群体）<br>
Workbook：具体指定那个工作薄（特定，具体个体）</p>
<p><strong>Application属性</strong><br>
Application. ScreenUpdating = False ： 关闭屏幕更新<br>
Application. DisplayAlerts = False ： 关闭警告显示框</p>
<h3 id="openactivesaveclose">Open,Active,Save,Close</h3>
<pre><code>Sub test()

Application.DisplayAlerts = False                  # 关闭显示框提示
Application.ScreenUpdating = False                 # 关闭屏幕更新

Workbooks.Open Filename:=&quot;d;\data\1.xlsx&quot;          # 打开文件
ActiveWorkbook.Sheets(1).Range(&quot;a1&quot;) = &quot;到此一游&quot;   # Activeworkbook,当前活动工作薄
ActiveWorkbook.Save                                # 当前活动工作薄保存
Activeworkbool.Close                               # 当前活动工作薄关闭

Application.DisplayAlerts = True                   # 打开显示框提示
Application.ScreenUpdating = True                  # 打开显示框提示

End Sub
</code></pre>
<h3 id="addsaveascopy">Add,SaveAS,Copy</h3>
<pre><code>Sub test()
Dim sht As Worksheet

For Each sht In Sheets
    sht.Copy                                                         # Copy自动生成表格
    ActiveWorkbook.SaveAs Filename:=&quot;d:\data\&quot; &amp; sht.Name &amp; &quot;.xlsx&quot;  # 另存为文件
    ActiveWorkbook.Close                                             # 关闭表格
Next

End Sub
</code></pre>
<p><strong>Workbooks. Add</strong>：会自动生成一张空白工作薄<br>
<strong>sheets(1).Copy</strong>：会自动生成一张空白工作薄,复制到工作薄<br>
<strong>Save与SaveAs</strong>：<code>Save</code>直接保存到”文档“，<code>SaveAs</code>可以保存到指定路径(不保存到”文档“)。</p>
<h3 id="总结-2">总结</h3>
<p>特别需要注意以下几点：</p>
<pre><code>Sheets.Add           # 在当前的工作薄生成
Sheets(1).Copy       # 没有指定路径，会生成新的工作薄
Workbooks.Add        # 生成新的工作薄，默认路径为”文档“。需另存为SaveAs
没有Workbooks.Copy   # 没有学过工作薄复制
</code></pre>
<h2 id="第5课-单元格">第5课 -- 单元格</h2>
<h3 id="表达方式">表达方式</h3>
<pre><code>[A1]：不支持变量
Cells(1,1)：只能表示一个格子
Range(&quot;A1&quot;)：常用，可以表一个要格子也能是范围
Range(&quot;A1:K1&quot;).Offset(2,1)：区域偏移后选择
</code></pre>
<h3 id="常用属性-offset-endedxlupentirerow-resize">常用属性--Offset、Ended（xlUp），EntireRow、Resize</h3>
<pre><code>Value（值）,Text（内容文字）

Offset 偏移:range(&quot;a1&quot;).offset(10,0)
End(xlUp) 边界:已有数据的边界，此单元格必有数据或者是边界第1行或最后1行
                常用例子Range(&quot;a65536&quot;).End (xlUp) ，Range(&quot;a65536&quot;).End (xlUp) .Row
                End(xlDown),End(xltoLeft),End(xltoRight)

Resize 重新选区:range(&quot;a10&quot;).resize(1,10)，相当于range(&quot;a10 : j10&quot;)
EntireRow 整行:range(&quot;a10&quot;).EntireRow

Row（行号），Column(列号)
</code></pre>
<h3 id="常用操作-select-delete-copy-clear-autofilter">常用操作--Select、Delete、Copy、Clear、Autofilter</h3>
<pre><code>Select（选中）
Delete（删除）
Copy（复制）: Range(&quot;a1:a10&quot;) copy Range(&quot;b1&quot;)  # [b1]为目的位置
Clean（清除内容和格式），ClearContents(清空内容) ，ClearFormats(清除格式)
AutoFilter(自动筛选)
</code></pre>
<pre><code>Sub 拆分表格()
Dim i As Integer, j As Integer, k As Integer

Call 清空

For j = 2 To Sheets.Count
    For i = 2 To Range(&quot;a65536&quot;).End(xlUp).Row
        If Sheets(1).Range(&quot;d&quot; &amp; i) = Sheets(j).Name Then
            k = Sheets(j).Range(&quot;a65536&quot;).End(xlUp).Row
            Range(&quot;d&quot; &amp; i).EntireRow.Copy Sheets(j).Range(&quot;a&quot; &amp; k + 1)
        End If
    Next
Next
End Sub
-----------------------------------------------------------------
Sub 清空()
Dim i As Integer
For i = 2 To Sheets.Count
    Sheets(i).Range(&quot;a2:f10000&quot;).Clear
Next
End Sub
</code></pre>
<h3 id="总结-3">总结</h3>
<pre><code>需要理解 &amp; 记住写法 的概念
Range(&quot;A1&quot;)
Range(&quot;A1&quot;).Offset(2,1)
Range(&quot;a10&quot;).End(xlUp)
Range(“A1”).resize(2,2)
Range(“A1”).copy
Call QK

需要理解的概念
A1]	Cells(1,1)
Select	 Copy	Delete	ClearContents	Value	Text	Row	Column
Range(&quot;a1&quot;).EntireRow
Range(“a1:f100”).AutoFilter field:=4, Criteria1:=“=苏州&quot;
</code></pre>
<p>![](D:\softwares\Program Files\data\picture\方法属性.png)</p>
<h2 id="第6课-单元格">第6课 -- 单元格</h2>
<h3 id="数据拆分到多表autofilter筛选">数据拆分到多表（Autofilter筛选）</h3>
<p><strong>判断表名，Autofilter筛选复制</strong></p>
<p><code>Range(“a1:f100”).AutoFilter field:=4, Criteria1:=“=苏州&quot;</code></p>
<pre><code>Sub chaifenshuju()
Dim sht As Worksheet
Dim k, i, j As Integer
Dim irow As Integer  # 这个说的是一共多少行

irow = Sheet1.Range(&quot;a65536&quot;).End(xlUp).Row  # 拆分表

### 拆分表格 ###
For i = 2 To irow
    k = 0
    For Each sht In Sheets  # 判断是否已有表名
        If sht.Name = Sheet1.Range(&quot;d&quot; &amp; i) Then
            k = 1
        End If
    Next
    
    If k = 0 Then  # 根据判断结果建立新工作表
        Sheets.Add after:=Sheets(Sheets.Count)
        Sheets(Sheets.Count).Name = Sheet1.Range(&quot;d&quot; &amp; i)
    End If

Next

### 拷贝数据 ###
For j = 2 To Sheets.Count  # 拷贝数据
    Sheet1.Range(&quot;a1:f&quot; &amp; irow).AutoFilter Field:=4, Criteria1:=Sheets(j).Name
    Sheet1.Range(&quot;a1:f&quot; &amp; irow).Copy Sheets(j).Range(&quot;a1&quot;)
Next

Sheet1.Range(&quot;a1:f&quot; &amp; irow).AutoFilter # 恢复没有筛选状态

End Sub
</code></pre>
<h3 id="msgbox-与-inputbox">Msgbox 与  Inputbox</h3>
<p>Msgbox: <code>Msgbox “你好”</code></p>
<p>Inputbox: <code>i = Inputbox (“请输入”)</code></p>
<pre><code>Sub 对话框()
Dim i As String

i = InputBox(&quot;请输入祝福语&quot;)
MsgBox &quot;祝你牛年 &quot; &amp; i &amp; &quot;！ 牛气冲天！ &quot;

End Sub
</code></pre>
<img src="D:\softwares\Program Files\data\picture\inputbox与msgbox.jpg" style="zoom:70%;" />
<h3 id="根据部门创建表格拆分">根据部门创建表格（拆分）</h3>
<pre><code>Sub chaifenshuju()

Dim sht As Worksheet
Dim k, i, j As Integer
Dim irow As Integer '这个说的是一共多少行
Dim l As Integer

l = InputBox(&quot;请输入你要按哪列分&quot;)

##### 删除无意义的表 #####
Application.DisplayAlerts = False
If Sheets.Count &gt; 1 Then
    For Each sht1 In Sheets
        If sht1.Name &lt;&gt; &quot;数据&quot; Then
            sht1.Delete
        End If
    Next
End If
Application.DisplayAlerts = True '这个地方上课的时候我没改成true，请大家注意一下

irow = Sheet1.Range(&quot;a65536&quot;).End(xlUp).Row
'拆分表
For i = 2 To irow
    k = 0
    For Each sht In Sheets
        If sht.Name = Sheet1.Cells(i, l) Then
            k = 1
        End If
    Next
    
    If k = 0 Then
        Sheets.Add after:=Sheets(Sheets.Count)
        Sheets(Sheets.Count).Name = Sheet1.Cells(i, l)
    End If
Next

'拷贝数据
For j = 2 To Sheets.Count
    Sheet1.Range(&quot;a1:f&quot; &amp; irow).AutoFilter Field:=l, Criteria1:=Sheets(j).Name
    Sheet1.Range(&quot;a1:f&quot; &amp; irow).Copy Sheets(j).Range(&quot;a1&quot;)
Next

Sheet1.Range(&quot;a1:f&quot; &amp; irow).AutoFilter

Sheet1.Select

MsgBox &quot;已处理完毕&quot;

End Sub
</code></pre>
<h3 id="合并多个工作表合并">合并多个工作表（合并）</h3>
<pre><code>Sub hebing()
Dim i, j As Integer   'i是数据源表的最后一行，j是目标表(数据表)的最后一行
Dim sht As Worksheet

'先要删除所有数据
Sheet1.Range(&quot;a1:f65536&quot;).ClearContents

'复制表头
Sheet2.Range(&quot;a1:f1&quot;).Copy Sheet1.Range(&quot;a1&quot;)

'复制数据
For Each sht In Sheets
    If sht.Name &lt;&gt; &quot;数据&quot; Then
        i = sht.Range(&quot;a65536&quot;).End(xlUp).Row
        j = Sheet1.Range(&quot;a65536&quot;).End(xlUp).Row
        sht.Range(&quot;a2:f&quot; &amp; i).Copy Sheet1.Range(&quot;a&quot; &amp; j + 1)
    End If
Next
End Sub

'#################################################################################################
'隐藏任务：
'因为工作中的表，表头不一定只有一行，能不能执行程序以前弹出inputbox，问一下用户表头有几行，然后再合并
'如果表头有两行，则其他表数据要从第三行开始取
'#################################################################################################
</code></pre>
<h3 id="总结-4">总结</h3>
<pre><code>##### 需要理解并记住写法的概念 #####
Msgbox “你好”
I = Inputbox (“请输入”)

##### 需要理解的概念 #####
批量创建表时，回避表名重名问题
</code></pre>
<h2 id="第7课-事件与典型应用">第7课 -- 事件与典型应用</h2>
<h3 id="with语句-单元格格式设置">With语句 -- 单元格格式设置</h3>
<pre><code>Sub 宏4()
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End Sub
</code></pre>
<p>![](D:\softwares\Program Files\data\picture\with语句使用.jpg)</p>
<h3 id="事件与典型应用">事件与典型应用</h3>
<p><strong>自动筛选代码</strong></p>
<p><strong>事件停止代码：</strong><code>Application.EnableEvents = False</code></p>
<pre><code>Worksheet                                                   Change
-------------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)

    Application.EnableEvents = False
    Call 筛选
    Application.EnableEvents = True

End Sub
-------------------------------------------------------------------
Sub 筛选 ()
    Range(&quot;l1:q10000&quot;).ClearContents
    Range(&quot;A1:F232&quot;).AutoFilter Field:=4, Criteria1:=Range(&quot;i2&quot;)
    Range(&quot;A1:F232&quot;).Copy Range(&quot;l1&quot;)
    Range(&quot;A1:F232&quot;).AutoFilter
end Sub
</code></pre>
<p><strong>自动更新</strong></p>
<p><strong>刷新代码：</strong><code>RefreshAll</code></p>
<pre><code>Worksheet                                                  Activate
--------------------------------------------------------------------
Private Sub Worksheet_Activate()
	ActiveWorkbook.RefreshAll
End Sub
</code></pre>
<p><strong>重要数据自动备份代码</strong></p>
<p><strong>复制另存为：</strong><code>SaveCopyAs</code><br>
<strong>格式代码，现在代码：</strong><code>Format(Now(), &quot;yyyymmddhhmmss&quot;)</code></p>
<pre><code>Workbook                                                               BeforeSave
----------------------------------------------------------------------------------
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
	ThisWorkbook.SaveCopyAs &quot;d:\data\&quot; &amp; Format(Now(), &quot;yyyymmddhhmmss&quot;) &amp; &quot;.xls&quot;
End Sub

</code></pre>
<p><strong>制作密码验证</strong></p>
<p><strong>隐藏：</strong><code>sht.Visible = xlSheetVeryHidden</code><br>
<strong>显示：</strong><code>Sht.Visible = xlSheetVisible</code></p>
<pre><code>Workbook                                      BeforeClose                  
---------------------------------------------------------
Private Sub Workbook_BeforeClose(Cancel As Boolean)
Dim sht As Worksheet
'隐藏所有表
For Each sht In Sheets
    If sht.Name &lt;&gt; &quot;登录界面&quot; Then
        sht.Visible = xlSheetVeryHidden
    End If
Next
End Sub
----------------------------------------------------------
Private Sub Workbook_Open()
Dim i

i = InputBox(&quot;请输入密码&quot;)

If i = &quot;123&quot; Then
    Sheet1.Visible = xlSheetVisible
    Sheet2.Visible = xlSheetVisible
    Sheet3.Visible = xlSheetVisible
ElseIf i = &quot;456&quot; Then
    Sheet4.Visible = xlSheetVisible
    Sheet5.Visible = xlSheetVisible
    Sheet6.Visible = xlSheetVisible
Else
    MsgBox &quot;密码输入错误&quot;
    ThisWorkbook.Close
End If
        
End Sub
</code></pre>
<p>![](D:\softwares\Program Files\data\picture\工作事件薄3.jpg)</p>
<h3 id="总结-5">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>Application.EnableEvents = False    ThisWorkbook.SaveCopyAs
Format()  Now()
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>Sheet1.Visible = xlSheetVeryHidden
Sheet1.Visible = xlSheetVisble
</code></pre>
<h2 id="第8课-函数使用公式">第8课 -- 函数（使用公式）</h2>
<h3 id="工作表函数worksheetfunction">工作表函数（WorksheetFunction）</h3>
<p><strong>Application.WorksheetFunction：所有工作表函数公式的集合</strong></p>
<pre><code>CountA（计算非空值），CountIf（条件计算），VLookup（查找）
k = Application.WorksheetFunction.CountA(Sheets(i).Range(&quot;a:a&quot;)) 
l = Application.WorksheetFunction.CountIf(Sheets(i).Range(&quot;f:f&quot;), &quot;男&quot;)
m = Application.WorksheetFunction.CountIf(Sheets(i).Range(&quot;f:f&quot;), &quot;女&quot;)
</code></pre>
<h3 id="错误回避on-error">错误回避（On Error）</h3>
<p>**On Error Resume 或 GoTo ：**如果发生错误，“继续进行”或“跳到那行”<br>
<strong>On Error Resume Next</strong> （在For循环使用）</p>
<p><strong>考生成绩统计&amp;查询系统</strong></p>
<pre><code>Sub chaxun()

On Error Resume Next

Sheet1.Range(&quot;d14&quot;).ClearContents

For i = 2 To Sheets.Count
    Sheet1.Range(&quot;d14&quot;) = Application.WorksheetFunction.VLookup(Sheet1.Range(&quot;d9&quot;), Sheets(i).Range(&quot;a:h&quot;), 5, 0)
    Sheet1.Range(&quot;d16&quot;) = Application.WorksheetFunction.VLookup(Sheet1.Range(&quot;d9&quot;), Sheets(i).Range(&quot;a:h&quot;), 6, 0)
    Sheet1.Range(&quot;d18&quot;) = Application.WorksheetFunction.VLookup(Sheet1.Range(&quot;d9&quot;), Sheets(i).Range(&quot;a:h&quot;), 3, 0)
    Sheet1.Range(&quot;d20&quot;) = Application.WorksheetFunction.VLookup(Sheet1.Range(&quot;d9&quot;), Sheets(i).Range(&quot;a:h&quot;), 8, 0)
    Sheet1.Range(&quot;d22&quot;) = Sheets(i).Name 

    If Sheet1.Range(&quot;d14&quot;) &lt;&gt; &quot;&quot; Then
        Exit For
    End If

Next
End Sub
</code></pre>
<h3 id="vba函数vba">VBA函数（VBA）</h3>
<p><code>IsNumeri</code>：判断运算结果是否为数值。<br>
<code>val</code>：返回包含于字符串内的数字，字符串中是一个适当类型的数值。<br>
<code>InStr</code>：寻找字节在数据中的第几位。<br>
<code>Split</code>：切片函数。<strong>结果数组以0开始</strong></p>
<p><strong>提取年份和周的信息</strong></p>
<pre><code>Sub 提取()

On Error Resume Next
For i = 2 To Sheet2.Range(&quot;a65536&quot;).End(xlUp).Row
    Sheet2.Range(&quot;b&quot; &amp; i) = Split(Sheet2.Range(&quot;a&quot; &amp; i), &quot;-&quot;)(2) &amp; &quot;年 第&quot; &amp; Split(Sheet2.Range(&quot;a&quot; &amp; i), &quot;-&quot;)(3) &amp; &quot;周&quot;
Next
End Sub
----------------结果------------------------
产品信息	提取年份和周的信息
PW-023-2015-37-001	2015年 第37周
YF-03-2015-19-001	2015年 第19周
wqwqw	
qwd	
PW-004-2015-21-002	2015年 第21周
</code></pre>
<p><strong>转化日期 -- DateSerial , Left , Mid</strong></p>
<pre><code>Sub 转化()

With Sheet1
    For i = 2 To .Range(&quot;a65536&quot;).End(xlUp).Row
        .Range(&quot;b&quot; &amp; i) = DateSerial(Left(.Range(&quot;a&quot; &amp; i), 4), Mid(.Range(&quot;a&quot; &amp; i), 5, 2), Right(.Range(&quot;a&quot; &amp; i), 2))
    Next
End With
End Sub
-------------------------------------------------------
假日期	     转化为日期格式
20140808	2014/8/8
20160926	2016/9/26
</code></pre>
<p><strong>提取身份证号码 -- DateSerial , Left , Mid</strong></p>
<pre><code>Sub 提取身份证号码()
With Sheet2
    For i = 2 To .Range(&quot;a65536&quot;).End(xlUp).Row
        .Range(&quot;b&quot; &amp; i) = DateSerial(Mid(.Range(&quot;a&quot; &amp; i), 7, 4), Mid(.Range(&quot;a&quot; &amp; i), 11, 2), Mid(.Range(&quot;a&quot; &amp; i), 13, 2))
    Next
End With
End Sub
----------------------------------------------------------
身份证	              生日
420203198808089201	1988/8/8
220938199009268643	1990/9/26

</code></pre>
<h3 id="总结-6">总结</h3>
<pre><code>需要理解并记住写法的概念
InStr()--位置   IsNumeric()--判断
Split()--切片   Val()--转化
On Error Resume Next

需要理解的概念
Countif  Vlookup这些函数如何在VBA里调用：Application.WorksheetFunction
</code></pre>
<p>![](D:\softwares\Program Files\data\picture\常用变量与VBA函数.jpg)</p>
<h2 id="第9课-自定义函数和带参数过程">第9课 -- 自定义函数和带参数过程</h2>
<h3 id="创建自定义函数function">创建自定义函数（Function）</h3>
<p><strong>Function A  ( )</strong></p>
<p><strong>日期抓换与提取生日</strong></p>
<pre><code>Sub 转化()
With Sheet1
    For i = 2 To .Range(&quot;a65536&quot;).End(xlUp).Row
        .Range(&quot;b&quot; &amp; i) = rqzh(Range(&quot;a&quot; &amp; i))
    Next
End With
End Sub
-----------------------------------------------------------------
Sub 提取生日()
With Sheet2
    For i = 2 To .Range(&quot;a65536&quot;).End(xlUp).Row
        .Range(&quot;b&quot; &amp; i) = rqzh(Mid(Range(&quot;a&quot; &amp; i), 7, 8))
    Next
End With
End Sub
-----------------------------------------------------------------
Function rqzh(str As String) # 日期转换公式函数
	rqzh = DateSerial(Left(str, 4), Mid(str, 5, 2), Right(str, 2))
End Function
</code></pre>
<p><strong>在工作表中调用VBA函数</strong></p>
<pre><code>Function jqzf(str As String, str1 As String, i As Integer)
	jqzf = Split(str, str1)(i - 1)
End Function
</code></pre>
<h3 id="创建带参数的过程sub">创建带参数的过程（Sub）</h3>
<p>**Sub过程：**是一组动作，操作<br>
**函数：**是运算<br>
**共同点：**带参数，就可以在其他过程中被调用</p>
<p><strong>Sub 创建表的函数调用</strong></p>
<pre><code>Sub 创建表(str As String)
Dim sht As Worksheet

    For Each sht In Sheets
        If sht.Name = str Then
            k = 1
        End If
    Next

    If k = 0 Then
        Sheets.Add after:=Sheets(Sheets.Count)
        Sheets(Sheets.Count).Name = str
    End If
    
End Sub
-------------------------------------------------
Sub abc1()
    Call cjb(Sheet1.Range(&quot;a1&quot;))
    Sheet1.Select
End Sub
-------------------------------------------------
Sub abc2()
    Call cjb(Sheet2.Range(&quot;a8&quot;))
    Sheet2.Select
End Sub
</code></pre>
<h3 id="使用加载宏工具">使用加载宏工具</h3>
<p><strong>STEP1 把代码放在“代码库”里</strong></p>
<p>新建代码文件 -- 另存为 -- Excel 97-2003 加载宏（.xla）或者 Excel 97-2003 加载宏（.xlam）-- 代码库地址<br>
代码库地址（默认唯一承认地址）：C:\Users\G.E\AppData\Roaming\Microsoft\AddIns</p>
<p><strong>STEP2 告诉Excel每次打开文件都加载</strong><br>
开发工具 -- 加载项 -- 加载（选择相应的宏）</p>
<p><strong>STEP3 设置宏按钮</strong><br>
文件 -- 选项 -- 快速访问工具栏 -- 常用命令 -- 宏</p>
<p><strong>代码库 与 函数库</strong><br>
可以把相应的代码跟函数加载到库里面，方便调用。<br>
删除库时，需要在Step2中，把库的“勾选”取消，取消加载调用。</p>
<h3 id="总结-7">总结</h3>
<pre><code>--------需要理解并记住写法的概念----------
Function ZMJ()

-------------需要理解的概念--------------
什么是函数 
为什么要有带参数的过程，带参数的过程如何调用
如何设置加载宏
</code></pre>
<h2 id="第10课-dir函数打开跨文件函数">第10课 -- Dir函数（打开跨文件函数）</h2>
<h3 id="将对象赋值到变量">将对象赋值到变量</h3>
<p><strong>把一个对象赋值到一个变量里：<strong>Set sht = Sheets.Add。对象赋值用</strong>Set</strong></p>
<h3 id="认识dir函数">认识Dir函数</h3>
<p><strong>Dir :</strong><br>
1 验证是否有该文件<br>
2 把文件名值返回到单元格，或对象赋值到变量中<br>
3 “ * ”返回第1个文件，之后第2个……最后一个为空，之后“错误”</p>
<p><strong>Dir标准化代码（通用代码 -- 壳子）：打开文件夹文件</strong></p>
<pre><code>Sub 打开文件()
Dim str As String
Dim wb As Workbook

str = Dir(&quot;d:\data\*.xls*&quot;)  # 通识符，包含xls的文件

For i = 1 To 100
    Set wb = Workbooks.Open(&quot;d:\data\&quot; &amp; str)
    ..............包含代码................
    wb.Close
    str = Dir 
    If str = &quot;&quot; Then
        Exit For
    End If
Next

End Sub
</code></pre>
<p><strong>多文件合并（打开文件并根据文件名工作表命名）</strong></p>
<pre><code>Sub 文件合并()
Dim str As String
Dim wb As Workbook
Dim sht As Worksheet

str = Dir(&quot;d:\data\*.xls*&quot;)  # 打开文件夹文件

For i = 1 To 100
    Set wb = Workbooks.Open(&quot;d:\data\&quot; &amp; str) # 对象赋值
    For Each sht In wb.Sheets
        sht.Copy after:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count) # 赋值工作表
        ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count).Name = Split(wb.Name, &quot;.&quot;)(0) &amp; sht.Name # 工作表命名
    Next
    wb.Close         # 关闭工作文件
    str = Dir        # 打开下一个文件
    If str = &quot;&quot; Then  # 判断是不是最后一个文件，决定退出循环
        Exit For
    End If
Next
End Sub
</code></pre>
<h3 id="find函数">Find函数</h3>
<p><strong>Find 通用性代码</strong></p>
<pre><code>Sub test()
Dim rng As Range

Set rng = Range(&quot;d:d&quot;).Find(Range(&quot;l3&quot;))
    If Not rng Is Nothing Then            # 如果rng is nothing 是NOt
        Range(&quot;m3&quot;) = rng.Offset(0, 3)
    End If

End Sub
</code></pre>
<h3 id="总结-8">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>SET sht = sheet1
Dir (“D:\data\*.*”)
Range(“a:a”).find（“张三”)
</code></pre>
<h2 id="第11课-数组">第11课 -- 数组</h2>
<h3 id="vba数组及常用操作">VBA数组及常用操作</h3>
<p>什么是数组：一组变量，能大幅度提升速度<br>
如何定义数组<br>
动态数组与静态数组<br>
计算数组大小<strong>Ubound</strong>和<strong>Lbound</strong><br>
重定义数组大小<strong>ReDim [Preserve] Arr(10)</strong></p>
<h3 id="应用实例解析">应用实例解析</h3>
<p>如何将区域赋值给数组<br>
数组的维度<br>
给数组赋值与取值</p>
<p><strong>查找销量冠军--动态数组</strong></p>
<pre><code>Sub test()
Dim arr()
Dim j, i As Integer

j = Range(&quot;a65536&quot;).End(xlUp).Row - 1

ReDim arr(1 To j)

For i = 1 To j
    arr(i) = Range(&quot;b&quot; &amp; i + 1) * Range(&quot;c&quot; &amp; i + 1)
Next

Range(&quot;h3&quot;) = Application.WorksheetFunction.Max(arr)
Range(&quot;h2&quot;) = Range(&quot;a&quot; &amp; Application.WorksheetFunction.Match(Range(&quot;h3&quot;), arr, 0) + 1)

MsgBox LBound(arr)

End Sub
</code></pre>
<h3 id="总结-9">总结</h3>
<p><strong>具体可以参看另一篇VBA的数组笔记</strong></p>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>Dim Arr() As String
Range(“a1”)=Arr(2,1)
Arr=Range(“a1:b10”)
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>什么是数组         Dim Arr(10，2) 
Ubound和Lbound    ReDim [Preserve]  Arr(10) 
使用数组的优势
Timer             GOTO 100
</code></pre>
<h2 id="第12课-activex控件">第12课 -- ActiveX控件</h2>
<h3 id="activex控件与表单控件">ActiveX控件与表单控件</h3>
<h3 id="按钮控件-commandbutton">按钮控件 -- CommandButton</h3>
<p><strong>常用属性</strong></p>
<pre><code>Caption 标题
Enabled 可用性
Visible 可见性
---------------------------------------------------------------------------------------------------
Sub test1()
    Sheet1.CommandButton1.Caption = &quot;结束&quot;
    Sheet1.CommandButton1.Enabled = False
    Sheet1.CommandButton1.Visible = False
End Sub
-- CommandButton ------------------------------- MouseMove -----------------# 事件--鼠标悬浮移动 # 
Sub 鼠标悬浮移动()
    Sheet1.CommandButton1.Top = Sheet1.CommandButton1.Top + Sheet1.CommandButton1.Height 
End Sub
</code></pre>
<h3 id="标签控件-label-a">标签控件 -- Label （A）</h3>
<p><strong>常用属性</strong></p>
<pre><code>Caption 标题
Enabled 可用性
Visible 可见性
---------------------------------------------------------------------------------
Sub test1()
    Sheet1.Label1.Caption = &quot;ABCD&quot;
    Sheet1.Label1.Visible = False
End Sub
</code></pre>
<h3 id="单选按钮控件-optionbutton">单选按钮控件 -- OptionButton</h3>
<p><strong>常用属性</strong></p>
<pre><code>Caption 标题
Enabled 可用性
Visible 可见性
GroupName 组名
Value 返回值
-----------------------------------------------------------------------------------
Sub test()
    If Sheet1.OptionButton1.Value = True Then
        MsgBox &quot;男性&quot;
    ElseIf Sheet1.OptionButton2.Value = False Then
        MsgBox &quot;女性&quot;
    Else
        MsgBox &quot;未选择性别&quot;
    End If
End Sub
</code></pre>
<h3 id="微调按钮控件-spinbutton">微调按钮控件 -- SpinButton</h3>
<p><strong>常用属性</strong></p>
<pre><code>Enabled 可用性
Visible 可见性
Value 返回值         # 一般与事件Click连用，返回值
Min 最小值
Max最大值
---------------------------------------------------------------------------------
Sub test()
    Sheet1.SpinButton1.Min = 1
    Sheet1.SpinButton1.Max = 10
    Range(&quot;a1&quot;) = Sheet1.SpinButton1.Value
End Sub
</code></pre>
<p>随堂小测--代码</p>
<pre><code>Private Sub CommandButton3_Click()
Call chengji
End Sub
---------------------------------------------------------
Private Sub OptionButton1_Click()
Sheet3.Range(&quot;g&quot; &amp; Sheet2.SpinButton1.Value + 1) = &quot;A&quot;
End Sub
---------------------------------------------------------
Private Sub OptionButton2_Click()
Sheet3.Range(&quot;g&quot; &amp; Sheet2.SpinButton1.Value + 1) = &quot;B&quot;
End Sub
---------------------------------------------------------
Private Sub OptionButton3_Click()
Sheet3.Range(&quot;g&quot; &amp; Sheet2.SpinButton1.Value + 1) = &quot;C&quot;
End Sub
---------------------------------------------------------
Private Sub OptionButton4_Click()
Sheet3.Range(&quot;g&quot; &amp; Sheet2.SpinButton1.Value + 1) = &quot;D&quot;
End Sub
---------------------------------------------------------
Private Sub SpinButton1_Change()
Call xieru
End Sub
----------------------------------------------------主要代码-----------------------------------
Sub xieru()
Dim i As Integer '题号

i = Sheet2.SpinButton1.Value

'写入数据

With Sheet2
    '清空单选按钮
    .OptionButton1.Value = False
    .OptionButton2.Value = False
    .OptionButton3.Value = False
    .OptionButton4.Value = False
    '写入题目
    .Label2.Caption = i
    .Label3 = Sheet3.Range(&quot;a&quot; &amp; i + 1)
    .Label4 = Sheet3.Range(&quot;b&quot; &amp; i + 1)
    .Label5 = Sheet3.Range(&quot;c&quot; &amp; i + 1)
    .Label6 = Sheet3.Range(&quot;d&quot; &amp; i + 1)
    .Label7 = Sheet3.Range(&quot;e&quot; &amp; i + 1)
    '查看是否有CD两个选项
    If .Label6.Caption = &quot;&quot; Then
       .OptionButton3.Visible = False
    Else
        .OptionButton3.Visible = True
    End If
    
    If .Label7.Caption = &quot;&quot; Then
       .OptionButton4.Visible = False
    Else
        .OptionButton4.Visible = True
    End If
    '返回之前的答案
    If Sheet3.Range(&quot;g&quot; &amp; i + 1) = &quot;A&quot; Then
        .OptionButton1.Value = True
    ElseIf Sheet3.Range(&quot;g&quot; &amp; i + 1) = &quot;B&quot; Then
        .OptionButton2.Value = True
    ElseIf Sheet3.Range(&quot;g&quot; &amp; i + 1) = &quot;C&quot; Then
        .OptionButton3.Value = True
    ElseIf Sheet3.Range(&quot;g&quot; &amp; i + 1) = &quot;D&quot; Then
        .OptionButton4.Value = True
    End If
    
End With

End Sub
-------------------------------------------------------------------
Sub csh()
Sheet2.SpinButton1.Max = Sheet3.Range(&quot;a65536&quot;).End(xlUp).Row - 1
End Sub
--------------------------------------------------------------------
Sub chengji()
Dim i, k As Integer
For i = 1 To Sheet2.SpinButton1.Max
    If Sheet3.Range(&quot;g&quot; &amp; i + 1) = Sheet3.Range(&quot;f&quot; &amp; i + 1) Then
        k = k + 1
    End If
Next
</code></pre>
<h3 id="总结-10">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>Enabled   Value    Visible  Caption
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>什么是控件
控件的各类事件
CommandButton （按钮）    OptionButton（单选按钮）    Label （标签）    SpinButton （微调按钮）  
</code></pre>
<h2 id="第13课-窗体与控件">第13课 -- 窗体与控件</h2>
<h3 id="窗体-uerform">窗体 -- UerForm</h3>
<p><strong>创建窗体</strong></p>
<pre><code>右键 -- 插入“用户窗体”
</code></pre>
<p><strong>窗体属性</strong></p>
<pre><code>Caption 标题
Enabled 可用性
Visible 可见性
ShowModal 显示模式
</code></pre>
<p><strong>窗体方法</strong></p>
<pre><code>ShowModal 显示模式：Show 显示  Hide 隐藏
</code></pre>
<p><strong>窗体事件</strong></p>
<pre><code>UserForm_Activate 激活
UserForm_QueryClose 退出
</code></pre>
<p><strong>窗体的显示及Excel表格的隐藏</strong></p>
<pre><code>--- Workbook ------------------------------------------- Open ----- # 打开Excel时，显示窗体
Private Sub Workbook_Open()
User Form.Show
End Sub
</code></pre>
<pre><code>--- UserForn------------------------------------------ Activate ---- # 激活窗体时，Excel隐藏
Private Sub UserForm_Activate()
Application.Visible = False
End Sub
--- UserForn ---------------------------------------- QueryClose ---- # 关闭窗体时，Excel退出
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.Quit                                                      # 退出Excel时，应保存数据
End Sub
</code></pre>
<p><strong>注意：通常退出Excel前，先保存Excel文件</strong></p>
<h3 id="文本框-textbox">文本框 -- TextBox</h3>
<p><strong>文本框（TextBox）与标签框（Label）的区别</strong></p>
<pre><code>TextBox给用户输入文字。Label是标签，内容不能改。
</code></pre>
<p><strong>TexBox属性</strong></p>
<pre><code>Enabled 可用性
Visible 可见性
Value 返回值
PasswordChar 密码字符      #设置密码时，密码不可见，显示的字符
TabIndex 按下Tab键时的切换顺序
</code></pre>
<p><strong>用户登录界面</strong></p>
<pre><code>Private Sub CommandButton1_Click()

If UserForm1.TextBox1.Value = &quot;张三&quot; And UserForm1.TextBox2.Value = &quot;123&quot; Then
    Sheet2.Unprotect Password:=&quot;test&quot;
    Sheet2.Visible = xlSheetVisible
    Me.Hide
ElseIf UserForm1.TextBox1.Value = &quot;李四&quot; And UserForm1.TextBox2.Value = &quot;0000&quot; Then
    Sheet3.Unprotect Password:=&quot;test&quot;
    Sheet3.Visible = xlSheetVisible
    Me.Hide
End If
</code></pre>
<p>End Sub</p>
<h3 id="复选按钮-checkbox">复选按钮 -- CheckBox</h3>
<p><strong>复选框(Checkbox)与单选框（OptionButton）的区别</strong></p>
<pre><code>1 前者可多选，后者是互斥。
2 根据名字可知Check是检测，Option是选择。
</code></pre>
<p><strong>CheckBox属性</strong></p>
<pre><code>Enabled 可用性
Visible 可见性
Value 返回值  # True 或者 False
</code></pre>
<h3 id="下拉框-combobox复合框">下拉框 -- ComboBox（复合框）</h3>
<p><strong>ComboBox（下拉框）属性</strong></p>
<pre><code>Enabled 可用性 Visible 可见性 Value 返回值
List 数据源列表
</code></pre>
<p><strong>ComboBox（下拉框）方法</strong></p>
<pre><code>AddItem 增加一个下拉项目
RemoveItem 移除一个项目
Clear 清除所有项目
</code></pre>
<p><strong>基本代码</strong></p>
<pre><code>-----------------------  增加下拉框的选项  # AddItem # ------------------------
Sub test1()
UserForm1.ComboBox1.AddItem &quot;苏州&quot;
End Sub
----------------  把单元格一列数据设置为下拉的数据源  # AddItem # ---------------
Sub test2()
For i = 2 To 6
    UserForm1.ComboBox1.AddItem Sheet1.Range(&quot;a&quot; &amp; i)
Next
End Sub
--------------------  删除掉下拉框里的一项  # RemoveItem # ---------------------
Sub test3()
Call test2
UserForm1.ComboBox1.RemoveItem (1) '删除第二项
End Sub
----------------------  清空下拉框数据源   # Clear # --------------------------
Sub test4()
Call test2
UserForm1.ComboBox1.Clear
End Sub
------------------  计算下拉框里有多少个选项  # ListCount # ---------------------
Sub test5()
Call test2
MsgBox UserForm1.ComboBox1.ListCount
End Sub
------------   把下拉框数据源里某个值输出到单元格  # 赋值 #  ---------------------
Sub test6()
Call test2
Range(&quot;c2&quot;) = UserForm1.ComboBox1.List(1)
End Sub
-------------  把下拉框里所有的选项输出到单元格区域  # 赋值 #   ------------------
Sub test7()
Call test2
Range(&quot;d1:d5&quot;) = UserForm1.ComboBox1.List
End Sub
</code></pre>
<h3 id="列表框-listbox">列表框 -- ListBox</h3>
<p><strong>ListBox属性</strong></p>
<pre><code>Enabled 可用性 Visible 可见性 Value 返回值
ColumnCount 列
List 数据源列表
</code></pre>
<p><strong>ListBox方法 -- 基本与下拉框ComboBox一样</strong></p>
<pre><code>AddItem 增加一个下拉项目
RemoveItem 移除一个项目
Clear 清除所有项目
</code></pre>
<h3 id="总结-11">总结</h3>
<p>**会员查询代码 -- 联想显示 **</p>
<pre><code>------------------------- 点击选中相关的号码，隐藏列表框 -------------
Private Sub ListBox1_Click()
Me.TextBox1 = Me.ListBox1.Value
Me.ListBox1.Visible = False
End Sub
-------------------------- 联想 符合相关的号码 ----------------------
Private Sub TextBox1_Change()
Dim arr()
If Len(TextBox1.Value) &gt;= 4 Then
    Me.ListBox1.Clear
    arr = Sheet1.Range(&quot;i2:i&quot; &amp; Sheet1.Range(&quot;a65536&quot;).End(xlUp).Row)
    
    For i = LBound(arr) To UBound(arr)
        If InStr(arr(i, 1), Me.TextBox1.Value) &gt; 0 Then
            Me.ListBox1.AddItem arr(i, 1)
        End If
    Next
    If Me.ListBox1.ListCount &gt; 0 Then
    Me.ListBox1.Visible = True
    End If

Else
    Me.ListBox1.Clear
    Me.ListBox1.Visible = False

End If
End Sub
</code></pre>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>UserForm1.Show  .Hide            Caption
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>UserForm_Activate 事件         UserForm_QueryClose 事件
UserForm1.Show    .Hide
TextBox（文本框）    CheckBox（复选框）    ComboBox（下拉框）    ListBox （列表框）
联想输入的原理  
</code></pre>
<h2 id="第14课-vba中用户信息交互">第14课 -- VBA中用户信息交互</h2>
<h3 id="msgbox">MsgBox</h3>
<p><strong>MsgBox对话框样式参数</strong></p>
<pre><code>参数：
Msgbox(提示文字，按钮类型，标题文字，帮助文件，帮助文件索引)
示例：
MsgBox &quot;你还好吗？&quot;, 4 + 32, &quot;打招呼对话框&quot;, &quot;C:/a.chm&quot;, 0
</code></pre>
<p><strong>按钮类型：可使用加号连接</strong></p>
<p>![image-20210225090249809](D:\softwares\Program Files\data\picture\msgbox.png)</p>
<p><strong>MsgBox对话框的返回值</strong></p>
<pre><code>示例：
A = MsgBox (&quot;你还好吗？&quot;, 4 + 32, &quot;打招呼对话框&quot;, &quot;C:/a.chm&quot;, 0)
</code></pre>
<img src="D:\softwares\Program Files\data\picture\msgbox返回值.png" alt="image-20210225090558766" style="zoom: 50%;" />
<h3 id="inputbox">InputBox</h3>
<p><strong>InputBox函数样式参数</strong></p>
<pre><code>参数：
Inputbox(提示文字，标题文字，默认值，左边距，上边距，帮助文件，帮助文件索引)
示例：
InputBox &quot;请输入姓名&quot;, &quot;登陆框&quot;, &quot;此处输入&quot;, 100, 100, &quot;C:/a.chm&quot;, 0
Name = InputBox(&quot;请输入姓名&quot;, &quot;登陆框&quot;, &quot;此处输入&quot;, 100, 100, &quot;C:/a.chm&quot;, 0)
</code></pre>
<p><strong>Inputbox方法样式参数</strong></p>
<pre><code>参数：
Inputbox(提示文字，标题文字，默认值，左边距，上边距，帮助文件，帮助文件索引，输入类型)
示例：
Application.InputBox &quot;输入金额&quot;, &quot;汇率计算&quot;, &quot;此处输入&quot;, 100, 100, &quot;C:/a.chm&quot;, 0, 1
A = Application.InputBox(&quot;输入金额&quot;, &quot;汇率计算&quot;, &quot;此处输入&quot;, 100, 100, &quot;C:/a.chm&quot;, 0, 1)
</code></pre>
<img src="D:\softwares\Program Files\data\picture\inputbox方法的类型值.png" alt="image-20210225091018466" style="zoom: 67%;" />
<p><strong>函数与方法的区别</strong></p>
<p>方法需要指定输入类型。函数没有。但是把InputBox的值赋值到变量时，需要两者都相同。</p>
<h3 id="getopenfilename">GetOpenFilename</h3>
<p><strong>GetOpenFilename的参数</strong></p>
<pre><code>参数：
GetOpenFilename (文件类型，优先类型，对话框标题，按钮文字，是否支持多选)
示例：
A= Application.GetOpenFilename(&quot;新表,*.xlsx,老表,*.xls&quot;, 1, &quot;快特么选！&quot;, &quot;确定&quot;, False)
注意：
这个方法并不会真正打开文件，只是返回文件完整路径！
文件类型参数中，先指定文件类型名，再指定后缀，要成对出现。
优先类型是指文件类型中列出的各种类型，哪种优先显示。
例如：&quot;Excel文件,*.xlsx,老表,*.xls,所有文件,*.*&quot;
</code></pre>
<p><strong>打开单个文件并关闭 -- 代码</strong></p>
<pre><code>Sub test()
Dim str As String
Dim wb As Workbook

str = Application.GetOpenFilename(&quot;Excel文件,*.xls*&quot;, , &quot;请选择&quot;)
    If str &lt;&gt; &quot;False&quot; Then
        Set wb = Workbooks.Open(str)

    '#######################
    '这里针对打开的WB进行操作
    '#######################

        wb.Close
    End If

End Sub
</code></pre>
<p><strong>打开多选的文件 -- 代码</strong></p>
<pre><code>Sub test1()
Dim arr()
Dim wb As Workbook
On Error Resume Next '这一句上课的时候没加
arr = Application.GetOpenFilename(&quot;Excel文件,*.xls*&quot;, , &quot;请选择&quot;, , True)

    If arr(1) &lt;&gt; &quot;False&quot; Then
        For i = LBound(arr) To UBound(arr)
            Set wb = Workbooks.Open(arr(i))

    '#######################
    '这里针对打开的WB进行操作
    '#######################

            wb.Close
        Next
    End If

End Sub
</code></pre>
<h3 id="applicationdialogs">Application.Dialogs</h3>
<p><strong>Application.Dialog的参数</strong></p>
<pre><code>参数：
Dialogs(对话框)
示例：
Application.Dialogs(xlDialogSaveAs).Show
注意：
对话框中所做的操作会真实执行。
</code></pre>
<h3 id="使用宏工具">使用宏工具</h3>
<pre><code>1 你要有宏：另存为加载宏文件
2 让他默默跟随Excel：勾选加载项
3 让他出来被看见：Excel界面上设置按钮
</code></pre>
<h3 id="总结-12">总结</h3>
<p><strong>通用多表合并 -- 标准通用宏代码</strong></p>
<p><strong>注意</strong>：一般不能<code>xls</code>整表复制到<code>xlsx</code>。因为最大表格：<code>xlsx:XFD1048576</code>,而<code>xls:IV65536</code></p>
<pre><code>Sub test()
Dim str()
Dim i As Integer
Dim wb, wb1 As Workbook
Dim sht As Worksheet

Set wb1 = ActiveWorkbook                  #  一般用Wokbooks.Add新建表避免没有激活当前工作薄

On Error Resume Next                      #  加上以后防止点了&quot;取消&quot;发生的错误
str = Application.GetOpenFilename(&quot;Excel数据文件,*.xls*&quot;, , , , True)
 
    For i = LBound(str) To UBound(str)    #  打开每一个表格
        Set wb = Workbooks.Open(str(i))
        
        For Each sht In wb.Sheets         #  赋值每一个工作表
            sht.Copy after:=wb1.Sheets(wb1.Sheets.Count)
            wb1.Sheets(wb1.Sheets.Count).Name = Split(wb.Name, &quot;.&quot;)(0) &amp; sht.Name
        Next
        
        wb.Close
    Next

End If

End Sub
</code></pre>
<p><strong>注意：</strong><code>If str(1) &lt;&gt; &quot;False&quot; Then</code> 不适合用于<strong>数组</strong>检验“取消”。<code>If str &lt;&gt; &quot;False&quot; Then</code>只适合用于打开<strong>单个文件</strong>检验“取消”</p>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>Msgbox                                   Application.GetOpenFilenam
Inputbox
Application. Inputbox
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>Msgbox(提示文字，按钮类型，标题文字，帮助文件，帮助文件索引)
Inputbox(提示文字，标题文字，默认值，左边距，上边距，帮助文件，帮助文件索引，输入类型)
A= Application.GetOpenFilename(&quot;新表,*.xlsx,老表,*.xls&quot;, 1, &quot;快特么选！&quot;, &quot;确定&quot;, False)
Application.Dialogs
</code></pre>
<h2 id="第15课-使用ado操作外部数据">第15课 -- 使用ADO操作外部数据</h2>
<h3 id="使用ado连接外部excel数据源">使用ADO连接外部Excel数据源</h3>
<p><strong>连接步骤：</strong></p>
<p><strong>1 在VBE界面中：工具 -- 引用 ，勾选“Microsoft ActiveX Data Object x.x Library ”</strong><br>
<strong>2 连接代码</strong></p>
<pre><code>Sub test()
Dim conn As New ADODB.Connection
conn.Open &quot;Provider = Microsoft.ACE.OLEDB.12.0;Data Source=D:\data\data.xlsx;extended properties=&quot;&quot;excel 12.0;HDR=YES&quot;&quot;&quot;
     ‘这里使用SQL对数据进行操作
conn.Close
End Sub
</code></pre>
<p>conn Execute (&quot;select * from [data$]&quot;) ：执行（从什么选取的列数据）</p>
<p><strong>抓取数据：</strong></p>
<pre><code>Range(“a1”).CopyFromRecordset conn.Execute(“select * from [data$]”）
</code></pre>
<h3 id="常用sql语句">常用SQL语句</h3>
<p><strong>查询数据</strong></p>
<pre><code>select * from [data$]
</code></pre>
<p><strong>查询某几个字段</strong></p>
<pre><code>select 姓名,年龄 from [data$]
</code></pre>
<p><strong>带条件的查询</strong></p>
<pre><code>select * from [data$] where 性别 = &quot;男“
</code></pre>
<p><strong>合并两个表的数据</strong></p>
<pre><code>select * from [data$] union all select * from [data2$]
</code></pre>
<p><strong>插入新纪录</strong></p>
<pre><code>insert into [data$] (姓名,性别,年龄) values ('AA','男',33)
</code></pre>
<p><strong>修改一条数据</strong></p>
<pre><code>update [data$] set 性别=‘男’,年龄=16 where 姓名=‘张三‘
</code></pre>
<p><strong>删除一****条数据</strong></p>
<pre><code>delete from [data$] where 姓名='张三'
</code></pre>
<p><strong>使用LEFT JOIN …ON… (类似于VLOOKUP）</strong></p>
<pre><code>select [data3$].姓名,性别,年龄,月薪 from [data$] left join [data3$] on [data$].姓名=[data3$].姓名
</code></pre>
<p><strong>先UNION ALL 再LEFT JOIN</strong></p>
<pre><code>select * from (select * from [data$] union all select * from [data2$])a left join [data3$] on a.姓名=[data3$].姓名
</code></pre>
<p><strong>将查询结果赋值到数组</strong></p>
<pre><code>arr = Application.WorksheetFunction.Transpose(conn.Execute(&quot;select * from [data$]&quot;).GetRows)
</code></pre>
<p><strong>使用ADO操作外部数据</strong></p>
<pre><code>'使用前请确认是否勾选了Microsoft ActiveX Data Object  x.x  Library！！！
Sub test()
Dim conn As New ADODB.Connection
Dim sql As String
'注意这个链接文件的路径！！！需要把edata文件放入d:\data文件夹！！

Range(&quot;a2:z1000&quot;).ClearContents
conn.Open &quot;Provider = Microsoft.ACE.OLEDB.12.0;Data Source=D:\data\Edata.xlsx;extended properties=&quot;&quot;excel 12.0;HDR=YES&quot;&quot;&quot;

sql = &quot;select a.姓名,年龄,性别,月薪 from (select * from [data$] union all select * from [data2$])a left join [data3$] on a.姓名=[data3$].姓名&quot;

Range(&quot;a2&quot;).CopyFromRecordset conn.Execute(sql)

conn.Close
End Sub
</code></pre>
<h3 id="使用ado连接access数据库">使用ADO连接Access数据库</h3>
<p><strong>连接步骤：</strong></p>
<p><strong>1 在VBE界面中：工具—引用，勾选“Microsoft ActiveX Data Objects x.x Library”</strong><br>
2 <strong>连接代码</strong></p>
<pre><code>Sub test()
Dim conn As New ADODB.Connection
conn.Open &quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\data\Adata.accdb&quot; 
         ‘这里使用SQL对数据进行操作
conn.Close
End Sub
</code></pre>
<p><strong>抓取数据练习</strong></p>
<pre><code>'使用前请确认是否勾选了Microsoft ActiveX Data Object  x.x  Library！！！
Sub test()
Dim conn As New ADODB.Connection
Dim sql As String
'注意这个链接文件的路径！！！需要把Adata文件放入d:\data文件夹！！

Range(&quot;a2:z1000&quot;).ClearContents
conn.Open &quot;Provider = Microsoft.ACE.OLEDB.12.0;Data Source=D:\data\Adata.accdb&quot;

sql = &quot;select 客户ID,公司名称,日期,产品类别,数量,金额,成本 from [客户信息表] left join [交易记录] on [客户信息表].ID=[交易记录].客户ID&quot;

Range(&quot;a2&quot;).CopyFromRecordset conn.Execute(sql)

conn.Close
End Sub
</code></pre>
<h3 id="总结-13">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>select * from [data$]
CONN.OPEN     .EXECUTE   .CLOSE
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>ADO与打开文件做操作的差别 和不同的应用场景
理解Ado连接代码的意义
了解SQL语句
</code></pre>
<h2 id="第16课-图形-图片-与-表单控件">第16课 -- 图形 图片 与 表单控件</h2>
<h3 id="图形-shape">图形 -- Shape</h3>
<h3 id="图片-picture">图片 -- Picture</h3>
<h3 id="使用窗体控件">使用窗体控件</h3>
<h3 id="使用like语句">使用Like语句</h3>
<h3 id="总结-14">总结</h3>
<h2 id="第17课-类模块">第17课 -- 类模块</h2>
<p>类模块：自己制造一个对象属性和方法</p>
<h3 id="公有与私有">公有与私有</h3>
<p><strong>Private Sub</strong><br>
<strong>Public Sub :默认为Public</strong></p>
<p><strong>变量3个范围：1 单个过程，2 单个模块跨过程（表头声明），3 所有模块（表头Public声明）</strong></p>
<h3 id="类模块">类模块</h3>
<p><strong>类的定义</strong></p>
<p>类：创建自定义对象（同一类型，所有称为“类”），包含对象的属性和方法（可带参数）</p>
<pre><code>1 把带参数的过程，直接放入了“类模块”的方法。即将过程定义为“类”的方法。类的方法参数即过程的参数。
2 代码可以写Sub ，还有Function。Sub是过程，是动作（方法）。Function是函数，返回值（属性）。
  在“类”模块中，属性为Property，相当于Function函数。
</code></pre>
<p><strong>创建方法与属性</strong></p>
<pre><code>方法（Sub）：---------- Sub 名称（） 
属性（Property）：Get（只读），Let（）或 Set（写入）------例如： Property Get 名称（）
</code></pre>
<p><strong>代码</strong></p>
<pre><code>-------------【方法】【代参数】---【创建新工作表】--------------
Sub Sadd(str As String)
Dim sht, sht1 As Worksheet
    For Each sht In Sheets
        If sht.Name = str Then
            k = k + 1
        End If
    Next
    
    If k = 0 Then
        Set sht1 = Sheets.Add
        sht1.Name = str
    End If
End Sub
-------------【方法】【不代参数】---【新建工作表】--------------
Sub Add()
	Sheets.Add after:=Sheets(Sheets.Count)
End Sub
-------------【属性】【只读】---【计算工作表数目】--------------
Property Get Scount()
	Scount = Sheets.Count	
End Property
</code></pre>
<p><strong>类的导出与导入 -- 创建开发工具包</strong></p>
<p>可以建立相应的类，建立“类”库，方便调用。</p>
<h3 id="do-while循环">Do While循环</h3>
<p>具体看另一篇VBA代码笔记</p>
<pre><code>Do..................loop
Do While.......loop
If.................Exit Do
</code></pre>
<h3 id="总结-15">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<pre><code>Private Sub
Public Sub
Public I 慎用
</code></pre>
<p><strong>需要理解的概念</strong></p>
<pre><code>使用自定义函数取代 Public I
什么是类
什么是对象  属性  方法 
自定义对象  自定义对象的属性   自定义对象的方法
</code></pre>
<h2 id="第18课-vba字典与用户界面">第18课 -- VBA字典与用户界面</h2>
<h3 id="vba字典">VBA字典</h3>
<p><strong>定义</strong></p>
<pre><code>字典：特殊数组。一个只有两列（key - Item）的方便查找的特殊数组。
字典用途：1 快速查找数据。因为Keys 与 Items 一一对应Key唯一
         2 去重复值（只有唯一的Keys，Keys不能相同重复。Items可以重复）
         3 Key不能保留重复值（重复值归一，便于统计）
也可以看成是只有两列的表格，如同查字典一样，在key，可以查到相应的Item
</code></pre>
<p><strong>使用方法</strong></p>
<p>1 VBE界面 工具 -- 引用 -- 浏览 （System）-- 加载<strong>scrrun.dll</strong> -- 再勾选<code>Microsoft Scripting Runting</code> -- 确定<br>
2 直接在代码中创建</p>
<pre><code>Dim dic
Set dic = CreateObject(&quot;Scripting.Dictionary&quot;)
</code></pre>
<p><strong>创建字典 -- 给字典赋值</strong></p>
<pre><code>------------------使用【Add】创建-----------
Dim dic As New Dictionary
    dic.Add &quot;张三&quot;, 3000
    dic.Add &quot;李四&quot;, 2000
    dic.Add &quot;李四&quot;, 6000      #  直接报错，因为已有Key“李四”，不能再新增 
MsgBox dic(&quot;李四&quot;)            #  报错
End Sub
-----------------使用【赋值】创建-------------
Sub zi2()
Dim dic As New Dictionary
    dic(&quot;张三&quot;) = 3000
    dic(&quot;李四&quot;) = 2000
    dic(&quot;李四&quot;) = 6000      #  赋值：没有的Key会新增，已有的会重新写入数值
MsgBox dic(&quot;李四&quot;)          #  6000
End Sub
</code></pre>
<p><strong>字典应用代码</strong></p>
<pre><code>---------------------【直接用For循环给字典赋值】-------------------------
Sub 字典()
Dim dic As New Dictionary
    For i = 2 To 5
        dic(Range(&quot;d&quot; &amp; i).Value) = Range(&quot;e&quot; &amp; i).Value         # 相当于数组赋值，需要补全Value
    Next
    
Range(&quot;a6&quot;) = dic(&quot;李四&quot;)
Range(&quot;a7:d7&quot;) = dic.Keys

End Sub
------------------------【使用数组给字典赋值】---------------------------
Sub 字典()
Dim dic As New Dictionary
Dim arr()
arr = Range(&quot;d2:e5&quot;)
    For i = 1 To 4
        dic(arr(i, 1)) = arr(i, 2)                              # 把数组arr赋值给字典的Key，Item
    Next
Range(&quot;a7&quot;) = dic(&quot;李四&quot;)
Range(&quot;a8:d8&quot;) = dic.Keys

End Sub
----------------------------【过程结果一样】-----------------------------
Key	Item		Key	Item
1	张三		张三	3000
2	李四		李四	2000
3	王五		王五	3000
			  李四  6666				
6666				
张三	李四	王五	#N/A	         # 去重复值，直接有2个“李四”，最后也只保留1个。但Item为最后一个写的值
</code></pre>
<p><strong>制作下拉列表 -- 用字典去重复值，得到唯一的Keys作为名称</strong></p>
<pre><code>Sub test()
Dim arr()
Dim dic As New Dictionary

arr = Range(&quot;a2:b13&quot;)

    For i = LBound(arr) To UBound(arr)       # 数组的上下界
        dic(arr(i, 2)) = 1                   # 把数组的第二列，赋值到Key中，去重复值
    Next
Sheet2.ListBox1.List = dic.Keys              # 把不重复的Key赋值到ListBox1中，作为列表

End Sub
</code></pre>
<h3 id="用户界面">用户界面</h3>
<p>创捷三级下拉列表<br>
销售界面中的控件逻辑</p>
<h3 id="总结-16">总结</h3>
<p><strong>需要理解并记住写法的概念</strong></p>
<p>无</p>
<p><strong>需要理解的概念</strong></p>
<pre><code>Dim dic
Set dic = CreateObject(&quot;Scripting.Dictionary&quot;)
用户界面中的控件逻辑
字典的两个好处
</code></pre>
<h2 id="第19课-excelaccess-系统开发">第19课 -- Excel+Access 系统开发</h2>
<h3 id="excel版销售工具的开发">Excel版销售工具的开发</h3>
<h3 id="数据库迁移至access数据库">数据库迁移至Access数据库</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[VBA学习笔记]]></title>
        <id>https://hellojunyi.github.io/post/vba-xue-xi-bi-ji/</id>
        <link href="https://hellojunyi.github.io/post/vba-xue-xi-bi-ji/">
        </link>
        <updated>2021-02-20T08:05:02.000Z</updated>
        <summary type="html"><![CDATA[<p>这是学习VBA中的一些笔记与总结。<br>
大部分资料来自于《Excel 2010 VBA 入门与实战》与<a href="https://www.lanrenexcel.com/excel-vba-tutorial/">懒人Excel</a></p>
]]></summary>
        <content type="html"><![CDATA[<p>这是学习VBA中的一些笔记与总结。<br>
大部分资料来自于《Excel 2010 VBA 入门与实战》与<a href="https://www.lanrenexcel.com/excel-vba-tutorial/">懒人Excel</a></p>
<!-- more -->
<h2 id="基本概念">基本概念</h2>
<p><strong>VBA: Visual Basic for Applications</strong><br>
对象，属性，方法<br>
过程和函数（Sub &amp; Function）</p>
<p><strong>宏与VBA的区别</strong>：<br>
宏：一组可以运行的VBA代码片段（即：使用VBA编写的一组代码片段）<br>
VBA：一种编程语言，在微软桌面应用程序中执行通用的自动化（OLE）任务的编程语言。</p>
<p><strong>能保存VBA代码的工作薄格式：</strong><br>
Excel 2007-2003（<em>.xls），</em><br>
<em>Excel启动宏的工作薄（</em>.xlsm）<br>
因此Excel工作薄（*.xlsx）不能保存</p>
<h2 id="变量与常量">变量与常量</h2>
<h3 id="变量">变量</h3>
<h4 id="声明变量">声明变量</h4>
<p><code>Dim [变量名] As [数据类型]</code></p>
<p>[变量名] 就是该变量的名称</p>
<p>[数据类型] 是该变量的数据类型</p>
<pre><code>Dim name As String 
Dim age As Integer
</code></pre>
<p><strong>注意：如果没有声明，默认数据类型为Variant。</strong></p>
<pre><code>Dim name = &quot;张飞&quot;                               #没有指定数据类型时，默认为Variant
Dim a as integer , b as integer , c as integer  #a b c 都是integer类型
Dim a ， b ， c as integer                      #a b是Variant，c是integer abc可以赋值小数，但是输出是ab是原始数据，c为整数。
</code></pre>
<h4 id="变量命名">变量命名</h4>
<ul>
<li>必须以字母开头</li>
<li>建议用<strong>驼峰法</strong>命名：第一个单词以小写字母开始；从第二个单词开始以后的每个单词的首字母都采用大写字母<br>
如：myFirstName、myLastName</li>
</ul>
<h4 id="变量类型">变量类型</h4>
<h5 id="数字类型">数字类型</h5>
<p>数字类型的变量顾名思义，均是以数字变量。不同类型其数据范围有区别。大多数默认值为0。</p>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>类型</strong></th>
<th style="text-align:center"><strong>说明</strong></th>
<th style="text-align:center">占用空间</th>
<th><strong>数据范围</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Byte</td>
<td style="text-align:center">字节</td>
<td style="text-align:center">1字节</td>
<td>0 至 255</td>
</tr>
<tr>
<td style="text-align:center"><strong>Integer</strong></td>
<td style="text-align:center"><strong>普通整型</strong></td>
<td style="text-align:center">2字节</td>
<td>-32,768 至 32,767</td>
</tr>
<tr>
<td style="text-align:center"><strong>Long</strong></td>
<td style="text-align:center"><strong>长整型</strong></td>
<td style="text-align:center">4字节</td>
<td>-2,147,483,648  至 2,147,483,648</td>
</tr>
<tr>
<td style="text-align:center">Single</td>
<td style="text-align:center">单精度浮点数</td>
<td style="text-align:center">4字节</td>
<td>在表示负数时： -3.402823E38 ~ -1.401298E-45   <br />  在表示正数时： 1.401298E-45  ~ 3.402823E38</td>
</tr>
<tr>
<td style="text-align:center">Double</td>
<td style="text-align:center">双精度浮点数</td>
<td style="text-align:center">8字节</td>
<td>在表示负数时： -1.79769313486231E308 ~  -4.94065645841247E-324   <br />  在表示正数时：  4.94065645841247E-324 ~ 1.79769313486231E308</td>
</tr>
<tr>
<td style="text-align:center">Currency</td>
<td style="text-align:center">货币</td>
<td style="text-align:center">8字节</td>
<td>-922,337,203,685,477.5808  至  922,337,203,685,477.5807</td>
</tr>
<tr>
<td style="text-align:center">Decimal</td>
<td style="text-align:center">小数型</td>
<td style="text-align:center">14字节</td>
<td>未放置定点数： +/-  79,228,162,514,264,337,593,543,950,335   <br />  放置定点数： +/- 7.9228162514264337593543950335</td>
</tr>
</tbody>
</table>
<h5 id="非数字类型">非数字类型</h5>
<p>非数字变量通常不能直接参与算术运算。</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">说明</th>
<th style="text-align:center">占用空间</th>
<th>数据范围</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>String</strong></td>
<td style="text-align:center"><strong>文本类型</strong></td>
<td style="text-align:center">字符串长</td>
<td>0 至 20亿字符 （&quot;10086&quot;,&quot;欢迎光临&quot;）</td>
</tr>
<tr>
<td style="text-align:center">Boolean</td>
<td style="text-align:center">逻辑值（布尔型）</td>
<td style="text-align:center">2字节</td>
<td>True 或 False</td>
</tr>
<tr>
<td style="text-align:center">Date</td>
<td style="text-align:center">日期和时间</td>
<td style="text-align:center">8字节</td>
<td>时间：00:00:00 至 23:59:59  （#10:05 AM#）<br />日期： 100-1-1 至 9999-12-31 （#2020-01-01#）</td>
</tr>
<tr>
<td style="text-align:center">Object</td>
<td style="text-align:center">对象</td>
<td style="text-align:center"></td>
<td>VBA 和 Excel 对象</td>
</tr>
</tbody>
</table>
<h5 id="通用类型">通用类型</h5>
<p>通用数据类型，指的是可存储任何类型的数据。在程序运行过程，VBA 可以自动识别数据类型，参与计算。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
<th>数据范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>Variant</td>
<td>任意类型</td>
<td>不限</td>
</tr>
</tbody>
</table>
<h4 id="变量的赋值">变量的赋值</h4>
<p><code>[变量名] = [数据]</code></p>
<p>即把右边的数据赋值给左边的变量，数据可以是“直接数据内容”也可以是其他变量数据。</p>
<h4 id="变量定义域运算符号">变量定义域&amp;运算符号</h4>
<figure data-type="image" tabindex="1"><img src="https://hellojunyi.github.io//post-images/1613808871774.jpg" alt="" loading="lazy"></figure>
<h4 id="总结">总结</h4>
<p>变量：变量声明（变量名，变量类型），变量赋值。</p>
<p>变量类型一般常用为：整型（integer，long），字符串（string），浮点（double），默认任意（Variant）</p>
<p>变量赋值：如没有指定则默认为Variant。</p>
<h3 id="常量">常量</h3>
<p>**定义：**程序之前已经确定，执行时，保存的值或字符串不会发生改变。</p>
<p>**分类：**直接常量、符号常量、系统常量</p>
<p><strong>常量声明与赋值</strong></p>
<p><code>Const [常量名] As [数据类型] = [值]</code></p>
<pre><code>声明 π 常量
Const Pi As Double = 3.14159
</code></pre>
<h2 id="程序过程控制">程序过程控制</h2>
<h3 id="判断程序">判断程序</h3>
<h4 id="if-then-else-elseif">If ... Then ... Else( ElseIf )</h4>
<p>基本语法：</p>
<pre><code>If 条件表达式1 Then
    '表达式1真时，执行的代码
ElseIf 条件表达式2 Then
    '表达式2真时，执行的代码
ElseIf 条件表达式3 Then
    '表达式3真时，执行的代码
    ...
ElseIf 条件表达式n Then
    '表达式n真时，执行的代码
Else
    '以上表达式都不为真时，执行的代码
End If
</code></pre>
<p>例子：判断学生成绩的优良</p>
<pre><code>Sub MyCode()

    Dim i As Integer

    For i = 2 To 10

        If Cells(i, &quot;B&quot;).Value &gt;= 85 Then
            Cells(i, &quot;D&quot;) = &quot;优&quot;
        ElseIf Cells(i, &quot;B&quot;).Value &gt;= 75 Then
            Cells(i, &quot;D&quot;) = &quot;良&quot;
        ElseIf Cells(i, &quot;B&quot;).Value &gt;= 60 Then
            Cells(i, &quot;D&quot;) = &quot;及格&quot;
        Else
            Cells(i, &quot;D&quot;) = &quot;不及格&quot;
        End If

    Next i
    
End Sub
</code></pre>
<h4 id="select-case">Select Case</h4>
<p><code>Select Case</code>结构是对同一个变量进行多次判断的另一种方式。相对于If ElseIf Else结构，它把条件表达式中的变量提取出来，使得代码结构更简洁，也更易于阅读。</p>
<p>基本语法如下：</p>
<pre><code>Select Case 变量
	Case 判断条件 1
    	'条件 1 真时，执行的代码
	Case 判断条件 2
    	'条件 2 真时，执行的代码
	Case 判断条件 3
    	'条件 3 真时，执行的代码
    Case Else
    	'之前的所有条件都不为真时，执行的代码
End Select
</code></pre>
<p>代码例子：</p>
<pre><code>Sub MyCode()

    Dim i As Integer

    For i = 2 To 10

        Select Case Cells(i, &quot;B&quot;).Value
            Case Is &gt;= 85                 # Case &gt;= 85 ,is会自动补齐
                Cells(i, &quot;D&quot;) = &quot;优&quot;
            Case Is &gt;= 75
                Cells(i, &quot;D&quot;) = &quot;良&quot;
            Case Is &gt;= 60
                Cells(i, &quot;D&quot;) = &quot;及格&quot;
            Case Else
                Cells(i, &quot;D&quot;) = &quot;不及格&quot;
        End Select

    Next i

End Sub
</code></pre>
<p>注意：select case匹配的条件也是按顺序，由上而下，且is自动补齐。</p>
<h3 id="循环结构">循环结构</h3>
<h4 id="fornext">For...Next</h4>
<p>循环可以按指定次数，循环执行一段代码。For 循环使用一个数字变量，从初始值开始，每循环一次，变量值增加或减小，直到变量的值等于指定的结束值时，循环结束。</p>
<p>基本语法：</p>
<pre><code>For [变量] = [初始值] To [结束值] Step [步长]
    '这里是循环执行的语句
Next
</code></pre>
<p>例子：</p>
<pre><code>Sub MyCode()

    Dim i As Integer
    Dim sum As Integer
    
    For i = 1 To 10 Step 1
        sum = sum + i
    Next

End Sub
</code></pre>
<p>注意：step 可以是负数（-2，-3），在删除单元格时，一般由下往上，使用负数。</p>
<h4 id="for-each">For Each</h4>
<p><code>For Each</code> 循环用于逐一遍历一个数据集合中的所有元素。数据集合包括数组、Excel 对象集合、字典等。</p>
<p><code>For Each</code> 循环不需要一个数字变量，但是需要与数据集合中的元素相同的数据类型变量。</p>
<p>基本语法如下：</p>
<pre><code>For Each [元素] In [元素集合]
    '循环执行的代码
Next [元素]
</code></pre>
<p>例子：</p>
<pre><code>Sub MyCode()

    Dim sh As Worksheet
    
    For Each sh In Worksheets
        Debug.Print sh.Name
    Next sh

End Sub
</code></pre>
<h4 id="do-while-循环">Do While 循环</h4>
<p>用于满足指定条件时循环执行一段代码的情形。循环的指定条件在 <code>While</code> 关键词后书写。</p>
<p><code>Do While … Loop</code> 循环与<code>Do … Loop While</code> 循环，两者大致一样，但后者时至少执行了一次循环再判断条件。</p>
<p>基本语法：</p>
<pre><code>Do While [条件表达式]
    '循环执行的代码
Loop
</code></pre>
<p>例子：</p>
<pre><code>Sub MyCode()

    Dim i As Integer
    Dim sum As Integer
    
    i = 1
    Do While i &lt;= 10
        sum = sum + i
        i = i + 1
    Loop

End Sub
</code></pre>
<h4 id="do-until-循环">Do Until 循环</h4>
<p><code>Do Until</code> 循环与 <code>Do While</code> 循环类似。不同点在于，<code>Do While</code> 在条件表达式为真时，继续执行循环；而 <code>Do Until</code> 在条件表达式为真时，停止执行循环。两者用法相似</p>
<p><code>Do Until … Loop</code> 循环与<code>Do … Loop Until</code> 循环相似，后者时执行了一次代码才判断。</p>
<p>基本语法：</p>
<pre><code>Do Until [条件表达式]
    '循环执行的代码
Loop
</code></pre>
<pre><code>Do
    '循环执行的代码
Loop Until [条件表达式]
</code></pre>
<h3 id="退出控制语句">退出控制语句</h3>
<h4 id="exit-for-exit-do">Exit For &amp; Exit Do</h4>
<p>用于跳出循环过程，一般在提前结束循环时使用，均适用于 <code>For Next</code> 循环和 <code>For Each</code> 循环。</p>
<h4 id="goto">GoTo</h4>
<p>无条件地转移到过程中指定的行（行的名字：Line1，Line2，FirstLine，LastLine)</p>
<h3 id="总结-2">总结</h3>
<figure data-type="image" tabindex="2"><img src="https://hellojunyi.github.io//post-images/1613808689253.jpg" alt="" loading="lazy"></figure>
<p><strong>6种循环结构：</strong></p>
<table>
<thead>
<tr>
<th>循环结构</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>For … Next 循环</td>
<td>按指定次数循环执行</td>
</tr>
<tr>
<td>For Each 循环</td>
<td>逐一遍历数据集合中的每一个元素</td>
</tr>
<tr>
<td>Do While … Loop 循环</td>
<td>当条件为真时，循环执行</td>
</tr>
<tr>
<td>Do … Loop While 循环</td>
<td>当条件为真时，循环执行。无论条件真假，至少运行一次</td>
</tr>
<tr>
<td>Do Until … Loop 循环</td>
<td>直到条件为真时，停止执行</td>
</tr>
<tr>
<td>Do … Loop Until 循环</td>
<td>直到条件为真时，停止执行。无论条件真假，至少运行一次</td>
</tr>
</tbody>
</table>
<p><strong>3种退出控制结构：</strong></p>
<table>
<thead>
<tr>
<th>跳出语句</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exit For</td>
<td>跳出 For 循环</td>
</tr>
<tr>
<td>Exit Do</td>
<td>跳出 Do While/Until 循环</td>
</tr>
<tr>
<td>GoTo</td>
<td>跳出到指定的行</td>
</tr>
</tbody>
</table>
<h2 id="声明与赋值">声明与赋值</h2>
<p><strong>4种变量</strong></p>
<p><strong>基本类型变量</strong>：基本类型变量是那些存储单个数据的变量，例如数字、文本、日期等。</p>
<p><strong>通用变量</strong>：通用变量，即 Variant 类型变量。该变量的类型在程序运行过程中，根据赋值的数据自动指定。</p>
<p><strong>数组</strong>：数组包含多个变量的集合。</p>
<p><strong>对象</strong>：对象包含一些列属性和方法</p>
<h3 id="基本类型变量">基本类型变量</h3>
<p>integer，long，double，</p>
<p><strong>声明</strong></p>
<pre><code>'语法
Dim [变量名] As [数据类型]

'实例
Dim name As String
Dim age As Integer
Dim height As Double
Dim birthday As Date
</code></pre>
<p><strong>赋值</strong>：实际中，一般把Let省略</p>
<pre><code>'语法，两种写法相同
Let [变量名] = [数据]
[变量名] = [数据]

'实例
Dim name As String
Let name = &quot;Zhang San&quot;

Dim age As Integer
Let age = 30

Dim birthday As Date
Let birthday = #2000-1-1#
</code></pre>
<h3 id="通用变量">通用变量</h3>
<p>Variant</p>
<p><strong>声明</strong>：跟基本变量一样。如没有声明，则默认为Variant，但是运算效率低。</p>
<pre><code>'语法
Dim [变量名] As Variant
Dim [变量名]

'实例
Dim message As Variant
Dim message
</code></pre>
<p><strong>赋值</strong>：跟基本变量一样。</p>
<pre><code>'声明变量（两者相同）
Dim message As Variant
Dim message

'赋值
message = &quot;Hello World&quot;
message = 1234567890
message = #2018-12-1#
</code></pre>
<h3 id="数组">数组</h3>
<p>arr（）</p>
<p><strong>声明</strong>：arr（1 to 10）或 arr（）</p>
<pre><code>'语法
'固定长度数组声明
Dim [变量名](开始序号 to 结束序号) As [数据类型]
'动态数组声明
Dim [变量名]() As [数据类型]

'实例
Dim names(1 to 10) As String  '声明包含10个文本类型元素的数组
Dim names() As String         '声明长度未知的文本类型数组
</code></pre>
<p><strong>赋值</strong>：</p>
<p>基本语法：<code>[数组名](元素序号) = [数据]</code> 例子如下：</p>
<pre><code>'声明数组
Dim arr(1 to 5) As String
'数组赋值
arr(1) = &quot;Zhang San&quot;
arr(2) = &quot;Li Si&quot;
arr(3) = &quot;Wang Wu&quot;
</code></pre>
<h3 id="对象">对象</h3>
<p>worksheet，workbook，object</p>
<p><strong>声明</strong>：跟其他类型基本一样</p>
<pre><code>'语法
'前期绑定声明语法
Dim [变量名] As [对象类型]
'后期绑定声明语法
Dim [变量名] As Object

'实例
Dim sh As Worksheet
Dim car As Object
</code></pre>
<p>赋值：<code>Set [变量名] = [对象类型数据]</code> 必须有Set。例子如下：</p>
<pre><code>'声明工作表类型的对象
Dim sheet As Worksheet
'将名称为“绩效表”的工作表，赋到 sheet 变量
Set sheet = Worksheets(&quot;绩效表&quot;)
</code></pre>
<p>如对象有多个属性，可以用<code>with</code>+对象和<code>End With</code>语句</p>
<pre><code>Dim sheet As Worksheet
Set sheet = Worksheets(&quot;绩效表&quot;)

With sheet
    .Name = &quot;旧绩效&quot;
    .Visible = False
End With
</code></pre>
<h3 id="总结-3">总结</h3>
<figure data-type="image" tabindex="3"><img src="https://hellojunyi.github.io//post-images/1613808710292.jpg" alt="" loading="lazy"></figure>
<h2 id="数组-2">数组</h2>
<h3 id="种类">种类</h3>
<h4 id="静态数组">静态数组</h4>
<p>**静态数组即长度固定的数组。**长度类型有两种：1指定上界（默认下界为0为1），2指定上下界（不受限制）。但下标必须为一个常数。</p>
<pre><code>Dim arr(5) as integer        #表示arr（0 to 5）,共6个元素。如在模块声明Option Base，则为arr（1 to 5），共5个元素。
Dim arr(1 to 5) as integer   #表示arr共有5个语素
Dim arr(5)                   #一般不指定数组类型，默认为Variant
Dim arr                      #不指定为数组，在过程中，直接用Array函数，直接赋值变为一维素组。

Dim arr (5,5)            #多维数组，一共6*6=36个元素
Dim arr (1 to 5,1 to 5)  #多维数组，一共5*5=25个元素 注意两者的区别
</code></pre>
<p>​    <strong>注意</strong>：一维数组：如没有指定，数组的下表肯定是0，即<code>arr（0）</code>而不是<code>arr（1）</code>。<br>
​               多维数组：可以想象为一个局部的l表格（二维数组），默认下界为0。<br>
​               如在模块声明Option Base 1 ，则默认的下界为1。</p>
<h4 id="动态数组">动态数组</h4>
<p><strong>动态数组即长度没有固定的数组</strong>。过程使用中，必须确定动态数据的长度，才能赋值（即先声明程度，再赋值）<br>
没有指定数组的长度，在过程应用中，可以直接赋值数组或者<code>ReDim</code>重新声明数组的长度。<br>
注意：在赋值常量或数值（非数值时）必须声明动态数组的长度（这样才能知道把值赋值在数组那个位置）。</p>
<p>使用步骤：先声明一个没有下标的数组，即arr（），然后在需要使用时，直接赋值数组，或Redim重新声明数组的大小</p>
<pre><code>Dim arr（）, i as integer
i = 5
ReDim  arr（2，i）           #此定义了一个3*6的数组（默认下界为0），即3行，6列，共18 个元素的数组。
</code></pre>
<h3 id="数组函数">数组函数</h3>
<p>数组函数：Array（），LBound（数组的下界），UBound（数组的上界），ReDim（重新定义数组），IsArray（），Erase<br>
数组函数的对象是数组，而不是元素，因此不用写位置。正确：Erase arr ，错误 Erase arr （ 1，1 ）。</p>
<h4 id="array">Array</h4>
<p><strong>Array</strong>：定义函数赋值。把一组元素直接赋值给数组，一维数组。</p>
<pre><code>Dim arr ()
arr = Array ( 1 , 2 , 3 , 4 ,5 )   #直接数组赋值，不用声明动态数组长度。arr（4），arr（0）=1，arr（1）=1……
</code></pre>
<h4 id="lbound-与-ubound">LBound 与 UBound</h4>
<p>LBound（数组的下界），UBound（数组的上界）。两者使用方法基本一样</p>
<pre><code>LBound （数组名称，[,维数]）         #如不写维数，默认为1

Dim arr（4，5） 
LBound ( arr,2) :  UBound ( arr,2)    #第2维的上下界。2维数组下界默认为0。
</code></pre>
<h4 id="redim">ReDim</h4>
<pre><code>ReDim [Preserve] 数组名称（第1维上界，第2维上界）[As 数据类型]
</code></pre>
<p>Redim只针对动态数组，静态数组已经固定长度不适用。<br>
ReDim会清空以前数组的数据。Preserve能保留以前数据，但是只能扩充最后一维的大小（前部维数必须相同），并不能增加数组的维数。</p>
<pre><code>ReDim x ( 10 , 10 ,10 )
...
ReDim x ( 10 , 10 , 15)
</code></pre>
<h4 id="isarray-与-erase">IsArray 与 Erase</h4>
<p>IsArray：判断数据是不是数据，如IsArray （arr）。Erase：清除数组的数据，如Erase arr。</p>
<h3 id="赋值与使用">赋值与使用</h3>
<h4 id="静态数组-2">静态数组</h4>
<p>不能用数组（<code>Array</code>函数，或<code>Range(“a1:c10”)</code>)赋值。一般用for循环，定位给数组内的每个元素赋值。</p>
<h4 id="动态数组-2">动态数组</h4>
<p>1 可以使用数组（<code>Array</code>函数，或<code>Range(“a1:c10”)</code>)赋值。<br>
2 Redim，重新定义数组的长度。之后用法跟静态数组相同。使用时最好把下界也标明。</p>
<p>重点是动态数组的数组赋值，特别需要注意的下界与上界，以及Redim Preserve的用法。</p>
<p><strong>数组<code>Range(“a1:c10”)</code>赋值给数组，默认下界为1</strong>。这与其他赋值方法不同，默认均为0。</p>
<pre><code>dim arr ()
arr = Range (“a1:c10”)  #特别注意下界，此时数组为arr（1 To 10 ， 1 To 3），10行3列，下界为表格的1。
</code></pre>
<h4 id="使用">使用</h4>
<p>当声明了数组，且数组有元素（即有固定长度），则可以使用数组。需注意的是，给整个数组<strong>数组<code>Range(“a1:c10”)</code>赋值</strong>，无论数组的下界上界如何，也是第一个元素顶格然后覆盖赋值。超出数组则输入#N/A。如下例子</p>
<pre><code>Sub text()
Dim arr(2 To 5, 4 To 6)

arr(2, 4) = 20
arr(3, 5) = 30

Range(&quot;a1:h6&quot;) = arr                #结果为[a1]=20,[b2]=30 ,超出范围为#N/A

End Sub
</code></pre>
<h3 id="总结-4">总结</h3>
<p>数组arr(1 to 10 , 1 to 5 )如同一栋大楼(10层，每层5间房)，元素就是房间里的存放的东西。arr(3,5),可以看作为3层5号房，元素即为里面存放的东西。<br>
在使用中，特别要注意的是动态数组的下上界。</p>
<h2 id="过程与函数">过程与函数</h2>
<h3 id="过程相关概念">过程相关概念</h3>
<p>系统提供：1.事件过程 ， 2. 内部函数过程<br>
用户定义：1. <code>Sub</code>过程 ，2. <code>Function</code>函数过程 ， 3. <code>Property</code>属性过程 ，4. <code>Event</code>事件过程</p>
<h4 id="sub">Sub</h4>
<p>基本语法：</p>
<pre><code>[Private] [Public] [Friend] [Static] Sub  &lt;过程名&gt; ( [变量名1] As [数据类型1],...[变量名n] As [数据类型n] )
    语句1
    语句2
    ...
    语句3
End Sub
</code></pre>
<p>例子：</p>
<pre><code>'声明一个过程
Sub SayHello(name As String)
    Msgbox &quot;Hello&quot; &amp; name
End Sub

'在另一个过程，调用上述过程，调用时，提供一个实际的 name 参数
Sub MyCode()
    SayHello &quot;World 2&quot;
End Sub
</code></pre>
<p>解释：我们在运行 <code>MyCode</code> 过程时，提供了 <code>name</code> 变量，即 <code>World 2</code> ，运行时弹出对话框显示 <code>Hello World 2</code>。</p>
<h4 id="function">Function</h4>
<p>基本语法：</p>
<pre><code>[Private] [Public] [Friend] [Static] Function &lt;函数名&gt; ([变量名1] As [数据类型1],...[变量名n] As [数据类型n]) As [返回值类型]
    语句1
    ...
    语句3
    [函数名] = [返回值]
End Function
</code></pre>
<p>例子：</p>
<pre><code>Function Add2Number(num1 As Double, num2 As Double) As Double
    Add2Number = num1 + num2
End Function
</code></pre>
<h4 id="过程与函数的不同">过程与函数的不同</h4>
<p><strong>1 声明语句不同：</strong><br>
函数的声明语句是 <code>Function</code> 和 <code>End Function</code>。<br>
过程的声明语句是 <code>Sub</code> 和 <code>End Sub</code>。</p>
<p><strong>2 函数可以返回值:</strong><br>
函数相对子过程最大的不同点是，函数可以返回指定的值。调用函数时，使用一个变量存储函数返回的值，可以在后续的代码中使用。<br>
这里需要指出的是，函数可以不返回值，这种情况其作用与子过程相同。因此建议，不需要返回值时，直接使用子过程代替函数。</p>
<p><strong>3 函数可以返回值:</strong><br>
函数声明时也需要指定其返回值的类型。其语法与变量声明类似，在函数名后指定数据类型。</p>
<pre><code>Function MyFunc() As String   # 指定返回值类型，此函数将返回文本类型的值
................ 
End Function
</code></pre>
<p><strong>4 函数主体代码中，返回值赋值到函数自己:</strong></p>
<pre><code>Function MyFunc() As String
    '此函数将返回 Hello World 的文本
    MyFunc = &quot;Hello World&quot;
End Function
</code></pre>
<p><strong>5 调用函数时，使用类型与函数返回值类型相同的变量获得返回值：</strong><br>
当主程序中调用函数获取其值时，需要使用类型与函数返回值类型相同的变量，否则程序会出错。</p>
<pre><code>Sub MyCode()
    Dim text As String  # 声明与函数返回值相同类型的变量
    text = MyFunc       # 调用函数，获得其返回的值
    Range(&quot;A1&quot;) = text  # 使用函数返回的值

End Sub
-----------------------
Function MyFunc() As String  # 此函数被上面的过程调用
    MyFunc = &quot;Hello World&quot;   # 此函数将返回 Hello World 的文本
End Function
</code></pre>
<p><strong>6 函数可在单元格内公式中使用：</strong><br>
与 Excel 内置的函数一样，用户自定义编写的函数可在公式中直接使用，其用法与内置函数一样。<br>
<img src="https://hellojunyi.github.io//post-images/1613809123162.png" alt="" loading="lazy"></p>
<h3 id="调用函数">调用函数</h3>
<h4 id="直接调用">直接调用</h4>
<p>直接写过程名称，即可调用过程函数</p>
<pre><code>Sub Main()
    MySub 2019,&quot;年&quot;            #如果子过程需要输入参数，多个参数只需用逗号（,）分开即可。
End Sub

Sub MySub(val1 As Integer, val2 As String)
    '代码
End Sub
</code></pre>
<h4 id="call调用">Call调用</h4>
<p>使用 Call 关键词调用时，Call 后接过程名。</p>
<pre><code>Sub Main()
    Call MySub(2019,&quot;年&quot;)     #如果子过程需要输入参数，则需要将参数放在括号内。没有则写（）
End Sub

Sub MySub(val1 As Integer, val2 As String)
    '代码
End Sub
</code></pre>
<h3 id="过程的参数传递">过程的参数传递</h3>
<h4 id="形参与实参的结合">形参与实参的结合</h4>
<p>形参：过程在定义时出现的参数名称，没有具体的值<br>
实参：实际调用时，传递给过程的参数的具体值。具体的值可以是常量，变量或数组。<br>
在VBA 中，形参与实参结合时有两种方式：按位置结合和按参数名称结合。</p>
<p><strong>按位置结合</strong>：传递的参数顺序必须与定义过程时参数的顺序完全相同。<br>
<strong>按参数名称结合</strong>：调用参数时，输入形参的名称，将形参的名称与实参用 “ <code>:=</code> ” 符号连接起来。</p>
<h4 id="按传值方式传递参数-byval">按传值方式传递参数--ByVal</h4>
<p><strong>ByVal</strong>：传递参数的值（by Value）。<br>
传递变量时，复制一份该变量，传入过程或函数。在过程和函数内部对该变量进行修改，只对该副本有效，对上一级过程（父过程）的变量没有影响。</p>
<pre><code>Sub 传值方式()
    Dim x As Integer
    x = 25
    Debug.Print &quot;主过程中变量x = &quot; &amp; x
    testValue x
    Debug.Print &quot;主过程中变量x = &quot; &amp; x
End Sub
--------------------------------------------
Public Sub testValue(ByVal x As Integer)
    x = x + 10
    Debug.Print &quot;子程序中变量x= &quot; &amp; x
End Sub
</code></pre>
<pre><code>主过程中变量x = 25
子程序中变量x= 35
主过程中变量x = 25
</code></pre>
<h4 id="按传地址方式传递参数-byref">按传地址方式传递参数--ByRef</h4>
<p><strong>ByRef</strong>：传递参数的引用（By Refer）<br>
传递变量时，将该变量的引用地址（<strong>内存中的地址</strong>）传入过程或函数。传入引用地址意味着，在过程或函数内部对其修改时，也会影响上一级过程（父过程）中的变量的值。<br>
<strong>注意：如定义过程时，没有在形参前添加ByVal或ByRef，则默认为ByRef。</strong></p>
<pre><code>Sub 传地址方式()
    Dim x As Integer
    x = 25
    Debug.Print &quot;主过程中变量x = &quot; &amp; x
    testValue x
    Debug.Print &quot;主过程中变量x = &quot; &amp; x
End Sub
--------------------------------------- 
Public Sub testValue(ByRef x As Integer)  #如没有指定，也默认为ByRef
    x = x + 10
    Debug.Print &quot;子程序中变量x= &quot; &amp; x
End Sub
</code></pre>
<pre><code>主过程中变量x = 25
子程序中变量x= 35
主过程中变量x = 35
</code></pre>
<h3 id="可选参数和可变参数">可选参数和可变参数</h3>
<h4 id="可选参数">可选参数</h4>
<p>可选参数：在函数或过程定义时的形参是固定的，但在调用时可以根据情况，不用指定某个实参。<br>
可选参数语法：在参数名前添加 <code>Optional</code> 关键词。例如：</p>
<p>语法：<code>Optional [参数名] As [数据类型]</code></p>
<pre><code>Sub test (num As Double, Optional base As Integer)
    '子过程代码
End Sub
</code></pre>
<h4 id="可选参数的默认值">可选参数的默认值</h4>
<p>可选参数定以后，如果在子过程中使用，需要判断参数有无提供。否则未提供而直接使用时，程序会出错。针对这种情况，VBA 提供了默认值机制，即可选参数未提供时，使用预算设置好的默认值。</p>
<p>语法：<code>Optional [参数名] As [数据类型] = [默认值]</code>。例子：</p>
<pre><code>Sub Main()
    Test 100, 100  '返回 1
    Test 100  '返回 2
End Sub
---------------------------------
Sub Test (num As Double, Optional base As Integer = 10)
    Debug.Print Log(num) / Log(base)
End Sub
</code></pre>
<h4 id="可选参数的位置">可选参数的位置</h4>
<p>当子过程有多个参数时，其中的<strong>可选参数需写在参数列表的末尾</strong>，否则 VBA 提示错误。</p>
<h3 id="可变参数">可变参数</h3>
<p>可变参数：可变参数表示过程中，实参的个数是不确定的。<br>
定义可变参数时，在最后一个参数前面加上<strong>ParamArray</strong>关键字，之后过程将可以接受任意个数的参数。</p>
<pre><code>Sub 主程序()
    Dim sum1 As Integer, sum2 As Integer
    getsum sum1, 1, 2, 3, 4, 5
    Debug.Print &quot;sum1 等于 &quot; &amp; sum1
    getsum sum2, 2, 4, 6
    Debug.Print &quot;sum2 等于 &quot; &amp; sum2
End Sub
------------------------------------------------
Sub getsum(sum As Integer, ParamArray intNum())
    For idx = LBound(intNum) To UBound(intNum)
        sum = sum + intNum(idx)
    Next
End Sub
------------------------------------------------
sum1 等于 15
sum2 等于 12
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《掌空习惯》-- 笔记]]></title>
        <id>https://hellojunyi.github.io/post/lesslesszhang-kong-xi-guan-greatergreater-zhai-chao/</id>
        <link href="https://hellojunyi.github.io/post/lesslesszhang-kong-xi-guan-greatergreater-zhai-chao/">
        </link>
        <updated>2021-01-28T13:42:30.000Z</updated>
        <summary type="html"><![CDATA[<h4 id="微习惯的惊人力量">微习惯的惊人力量</h4>
<ol>
<li>小习惯会带来大变化--复利</li>
<li>真正的进步--潜能储积期</li>
<li>忘记目标，专注于体系</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<h4 id="微习惯的惊人力量">微习惯的惊人力量</h4>
<ol>
<li>小习惯会带来大变化--复利</li>
<li>真正的进步--潜能储积期</li>
<li>忘记目标，专注于体系</li>
</ol>
<!-- more -->
<pre><code>1.赢家何输家心怀相同的目标
2.实现一个目标知识短暂的改变
3.目标束缚了你的幸福感
4.目标与长远改进的大方向不一致
</code></pre>
<ol start="4">
<li>微习惯体系--不求拔高目标，但求落实体系</li>
</ol>
<h5 id="习惯塑造身份">习惯塑造身份</h5>
<ol>
<li>变化的三层次 -- 结果变化、过程变化、身份变化</li>
<li>改变习惯最有效的方法 -- 你想成为谁，而不是要达到什么目标</li>
<li>身份来自习惯 -- 每个习惯都投票给你想成为的人</li>
<li>习惯至关重要的真正原因 -- 不是它能带给你更好的结果，而是它能改变你对自己的抱有希望</li>
</ol>
<h5 id="培养良好习惯的四步法">培养良好习惯的四步法</h5>
<ol>
<li>习惯的形成 -- 习惯是一种行为，重复的次数足够多，便自然而然地出现</li>
<li>习惯的最终目标 -- 用尽可能少的精力和努力来解决生活中的问题</li>
<li>习惯是一个反馈循环
<table>
<thead>
<tr>
<th style="text-align:center">问题阶段</th>
<th style="text-align:center">问题阶段</th>
<th style="text-align:center">解决阶段</th>
<th style="text-align:center">解决阶段</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1 提示</td>
<td style="text-align:center">2 渴求</td>
<td style="text-align:center">3 反应</td>
<td style="text-align:center">4奖励</td>
</tr>
</tbody>
</table>
</li>
<li>如何培养好习惯
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">如何培养好习惯</th>
<th style="text-align:center"></th>
<th style="text-align:center">如何戒除坏习惯</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">提示</td>
<td style="text-align:center">让它显而易见</td>
<td style="text-align:center">无提示</td>
<td style="text-align:center">使其无从显现</td>
</tr>
<tr>
<td style="text-align:center">渴求</td>
<td style="text-align:center">让他有吸引力</td>
<td style="text-align:center">无渴求</td>
<td style="text-align:center">使其缺乏吸引力</td>
</tr>
<tr>
<td style="text-align:center">反应</td>
<td style="text-align:center">让它简便易行</td>
<td style="text-align:center">无反应</td>
<td style="text-align:center">使其难以施行</td>
</tr>
<tr>
<td style="text-align:center">奖励</td>
<td style="text-align:center">让它令人愉悦</td>
<td style="text-align:center">无奖励</td>
<td style="text-align:center">使其令人厌烦</td>
</tr>
</tbody>
</table>
</li>
</ol>
<hr>
<h4 id="第一定律-让它显而易见">第一定律 -- 让它显而易见</h4>
<h5 id="习惯的预测性">习惯的预测性</h5>
<ol>
<li>习惯的预测性 -- 足够的练习，使你的大脑会不假思索预测特定结果的提示</li>
<li>习惯成自然（熟能生巧） -- 我们不再关注自己在做什么</li>
<li>行为转变始于自觉 -- 改变习惯前，你得先了解它</li>
<li>指差确认 -- 说出你的行动，会将你的意识程度从下意识的习惯状态提升到警觉的水平</li>
<li>习惯记分卡 -- 深入了解你的行为</li>
</ol>
<h5 id="培养新习惯的最佳方法">培养新习惯的最佳方法</h5>
<ol>
<li>让它显而易见 -- 行为转变的第一定律</li>
<li>执行意图公式 ：将新习惯与特定的时间和地点整合<pre><code>我将于【时间】在【地点】【行为】
</code></pre>
</li>
<li>习惯叠加：将新习惯与当前习惯整合<pre><code>继【当前习惯】之后，我将【新习惯】
</code></pre>
</li>
</ol>
<h5 id="原动力被高估环境更重要">原动力被高估，环境更重要</h5>
<ol>
<li>随时间推移，情境中的微小变化会导致行为的巨大变化</li>
<li>提示引发习惯，我们更容易注意到鲜明的提示</li>
<li>情境变成提示 -- 新环境培养新习惯更容易，因为不会受到旧习惯相关提示的干扰</li>
</ol>
<h5 id="自我控制的秘密">自我控制的秘密</h5>
<ol>
<li>养成习惯，不容易被忘记 -- 自我控制知识权宜之计，而非长远良策</li>
<li>戒除坏习惯的方法 -- 逃避诱惑，减少接触导致坏习惯的提示</li>
<li>让良好习惯的提示显而易见，让不良习惯的提示脱离视线</li>
</ol>
<hr>
<h4 id="第二定律-让它有吸引力">第二定律 -- 让它有吸引力</h4>
<h5 id="怎样让习惯不可抗拒">怎样让习惯不可抗拒</h5>
<ol>
<li>吸引力 -- 吸引力越大，习惯越容易养成</li>
<li>期待 -- 奖励的期待而非奖励本身，促使我们采取行动。预期越高，多巴胺峰值越大</li>
<li>喜好绑定让习惯更具吸引力 -- 将喜好的高频动作与需要做的低频动作搭配一起做</li>
</ol>
<h5 id="习惯形成中亲友所起的作用">习惯形成中亲友所起的作用</h5>
<ol>
<li>我们倾向于培养被我们的文化推崇的习惯</li>
<li>有吸引的行为 -- 能为我们赢得认可、尊重、赞扬</li>
</ol>
<h5 id="消除坏习惯的根源">消除坏习惯的根源</h5>
<ol>
<li>强调避免坏习惯所换来的好处，让坏习惯不再有吸引力</li>
</ol>
<hr>
<h4 id="第三定律-让它简便易行">第三定律 -- 让它简便易行</h4>
<h5 id="慢步前行但决不后退">慢步前行，但决不后退</h5>
<ol>
<li>付诸实践，不纸上谈兵</li>
<li>采取行动，不只是酝酿行动</li>
<li>习惯的形成使行为通过重复逐渐变得更加自动化的过程</li>
<li>习惯培养 -- 不在于时间长短，而在于重复的次数</li>
</ol>
<h5 id="最省力法则">最省力法则</h5>
<ol>
<li>最省力法则 -- 天然地倾向于付出最少工作量的选择</li>
<li>创造一个让人们便于做正确事的环境</li>
<li>阻力 -- 阻力小，习惯容易养成；阻力大，习惯难以养成</li>
</ol>
<h5 id="利用两分钟规则停止拖延">利用两分钟规则停止拖延</h5>
<ol>
<li>习惯可以在几秒钟内完成，但会持续影响你在接下来的几分钟或几个小时的行为</li>
<li>许多习惯发生在决定性的时刻，你的选择最终会导致卓有成效，或一事无成的一天</li>
<li>两分钟规则<pre><code>当你开始一种新习惯时，它所用时间不应超过两分钟。
</code></pre>
</li>
<li>开始阶段的仪式化，有利于进入做大事所需的注意力高度集中的状态</li>
<li>习惯优化前先要实现标准化</li>
</ol>
<h5 id="让好习惯不可避免坏习惯难以养成">让好习惯不可避免，坏习惯难以养成</h5>
<ol>
<li>采用承诺机制、战略性的一次性决策、技术手段</li>
</ol>
<hr>
<h4 id="第四定律-让它令人愉悦">第四定律 -- 让它令人愉悦</h4>
<h5 id="行为转变的基本准则">行为转变的基本准则</h5>
<ol>
<li>行为令人愉悦 -- 我们更有可能重复行为</li>
<li>行为转变的基本准则：重复有即时回报的行为</li>
<li>保持习惯 -- 需要有即时成就感，即使它体现在细微之处</li>
<li>让它令人愉悦 -- 提高这种行为得以重复的可能性</li>
</ol>
<h5 id="天天保持好习惯">天天保持好习惯</h5>
<ol>
<li>最令人满意的感觉之一就是进步的感觉</li>
<li>习惯追踪法 -- 衡量你是否养成习惯的简单方法</li>
<li>不要中断培养习惯的进程，要坚持不懈</li>
<li>绝不错过两次 -- 如果错过了一天，试着尽快恢复固有的做事节奏</li>
</ol>
<h5 id="问责伙伴改变一切">问责伙伴改变一切</h5>
<ol>
<li>问责伙伴对无所事事带来即时成本 -- 我们极不情愿感受被人的鄙视</li>
<li>知道别人在看着你，可以成为一种强大的动力</li>
</ol>
<hr>
<h4 id="高级战术">高级战术</h4>
<h5 id="揭秘天才-基因重要和无关紧要时">揭秘天才 -- 基因重要和无关紧要时</h5>
<ol>
<li>当你的习惯与天赋匹配时，你就容易养成并维持那种习惯。选择最适合你的习惯</li>
<li>基因不能排除艰苦努力的需要。他门只会帮着，告诉我们该努力做什么事甄别，告诉我们该努力做什么事情。</li>
</ol>
<h5 id="金发女孩准则如何在生活和工作中保持充沛动力">金发女孩准则：如何在生活和工作中保持充沛动力</h5>
<ol>
<li>金发女孩准则 -- 人们在处理其能力可及的事务时积极性最高</li>
<li>成功的最大威胁不是失败，而是倦怠</li>
<li>每个人受到激励都能努力工作，但工作不令人兴奋时，仍能继续奋进的则是人中佼佼者</li>
<li>专业人员依照计划行事，毫不动摇；业余爱好者则随波逐流，任性而为</li>
</ol>
<h5 id="培养好习惯的负面影响">培养好习惯的负面影响</h5>
<ol>
<li>习惯工作 + 刻意练习 = 精通</li>
<li>反思和回顾是一个过程，使你能够时刻关注自己的表现</li>
<li>我们越执着于一个身份，就越难超越它</li>
</ol>
<h5 id="结论获得持久成果的秘诀">结论：获得持久成果的秘诀</h5>
<hr>
<h4 id="怎样养成好习惯">怎样养成好习惯</h4>
<table>
<thead>
<tr>
<th style="text-align:center">第一定律</th>
<th>让它显而易见</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1.1</td>
<td>填写“习惯记分卡”；记下你当前的习惯并留意它们</td>
</tr>
<tr>
<td style="text-align:center">1.2</td>
<td>应用执行意图：我将于【时间】在【地点】【行为】</td>
</tr>
<tr>
<td style="text-align:center">1.3</td>
<td>应用习惯叠加：继【当前习惯】之后，我将【新习惯】</td>
</tr>
<tr>
<td style="text-align:center">1.4</td>
<td>设计环境，让好习惯的提示清晰明了</td>
</tr>
<tr>
<td style="text-align:center"><strong>第二定律</strong></td>
<td><strong>让它有吸引力</strong></td>
</tr>
<tr>
<td style="text-align:center">2.1</td>
<td>利用喜好绑定。用你喜好的行为强化你需要的动作</td>
</tr>
<tr>
<td style="text-align:center">2.2</td>
<td>加入把你喜好的行为视为正常行为的文化群体</td>
</tr>
<tr>
<td style="text-align:center">2.3</td>
<td>创设一种激励仪式。在实施低频行为前先做一件你特别喜好的事</td>
</tr>
<tr>
<td style="text-align:center"><strong>第三定律</strong></td>
<td><strong>让它简便易行</strong></td>
</tr>
<tr>
<td style="text-align:center">3.1</td>
<td>减少阻力。减少培养好习惯的步骤</td>
</tr>
<tr>
<td style="text-align:center">3.2</td>
<td>备好环境。创造一种有利于未来行为的环境</td>
</tr>
<tr>
<td style="text-align:center">3.3</td>
<td>把握好决定时刻。优化可以产生重大影响的小选择</td>
</tr>
<tr>
<td style="text-align:center">3.4</td>
<td>利用两分钟准则。缩短你的习惯所占用的时间，争取只需要量分钟</td>
</tr>
<tr>
<td style="text-align:center">3.5</td>
<td>自动化你的习惯。在能够锁定你未来行为的技术和物品上有所投入</td>
</tr>
<tr>
<td style="text-align:center"><strong>第四定律</strong></td>
<td><strong>让它令人愉悦</strong></td>
</tr>
<tr>
<td style="text-align:center">4.1</td>
<td>利用增强法。完成一套习惯动作后立即奖励自己</td>
</tr>
<tr>
<td style="text-align:center">4.2</td>
<td>让“无所事事”变得愉悦。让避免坏习惯的好处显而易见</td>
</tr>
<tr>
<td style="text-align:center">4.3</td>
<td>利用习惯追踪法。记录习惯倾向，不要中断</td>
</tr>
<tr>
<td style="text-align:center">4.4</td>
<td>决不连续错过两次。如果你忘了做，一定要尽快补救</td>
</tr>
</tbody>
</table>
<h4 id="怎样戒除坏习惯">怎样戒除坏习惯</h4>
<table>
<thead>
<tr>
<th>第一定律反用</th>
<th>让它脱离视线</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.5</td>
<td>降低出现频率。把坏习惯的提示清除出你所在的环境</td>
</tr>
<tr>
<td><strong>第二定律反用</strong></td>
<td><strong>让它缺乏吸引力</strong></td>
</tr>
<tr>
<td>2.4</td>
<td>重新梳理你的思路。罗列出戒除坏习惯所带来的益处</td>
</tr>
<tr>
<td><strong>第三定律反用</strong></td>
<td><strong>让它难以施行</strong></td>
</tr>
<tr>
<td>3.6</td>
<td>增大阻力。增加实行坏习惯的步骤</td>
</tr>
<tr>
<td>3.7</td>
<td>利用承诺机制。锁定未来会有利于你的选择项</td>
</tr>
<tr>
<td><strong>第四定律反用</strong></td>
<td><strong>让它令人厌恶</strong></td>
</tr>
<tr>
<td>4.5</td>
<td>找一个问责伙伴。请人监督你的行为</td>
</tr>
<tr>
<td>4.6</td>
<td>创立习惯契约。让坏习惯的恶果公开化并令人难以忍受</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《掌控习惯》-- 摘抄]]></title>
        <id>https://hellojunyi.github.io/post/lesslesszhang-kong-xi-guan-greatergreater-bi-ji/</id>
        <link href="https://hellojunyi.github.io/post/lesslesszhang-kong-xi-guan-greatergreater-bi-ji/">
        </link>
        <updated>2021-01-28T09:58:45.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="基本原理-点滴变化何以意义重大">基本原理 -- 点滴变化何以意义重大</h3>
<h4 id="微习惯的惊人力">微习惯的惊人力</h4>
<p>1	这一经历给了我一个重要的教训：只要你愿意坚持下去，起初看似微小和不起眼的变化，会随着岁月的积累，复合成显著的结果。我们都要应对挫败，但从长远来看，我们的生活品质往往取决于我们保持的习惯的质量。种什么因结什么果，你有什么样的习惯，就会享有什么样的结果。但是只要养成了更好的习惯，则凡事皆有可能。</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="基本原理-点滴变化何以意义重大">基本原理 -- 点滴变化何以意义重大</h3>
<h4 id="微习惯的惊人力">微习惯的惊人力</h4>
<p>1	这一经历给了我一个重要的教训：只要你愿意坚持下去，起初看似微小和不起眼的变化，会随着岁月的积累，复合成显著的结果。我们都要应对挫败，但从长远来看，我们的生活品质往往取决于我们保持的习惯的质量。种什么因结什么果，你有什么样的习惯，就会享有什么样的结果。但是只要养成了更好的习惯，则凡事皆有可能。</p>
<!-- more -->
<p>2	成功是日常习惯累积的产物，而不是一生仅有一次的重大转变的结果。</p>
<p>3	你此时此刻是成就辉煌还是一事无成并不重要，重要的是你当前的习惯是否让你走上了通向成功的道路。你应该更关心你在当下前行的轨迹，而不是你已经取得了什么样的结果。</p>
<p>4	成功与失败之间的差距会随着时间的延续而不断扩大。无论你朝哪个方向努力，它都会予以增益。好习惯使时间成为你的盟友，坏习惯使时间成为你的敌人。</p>
<p>5	这是任何复利进程的共同特征：最有力的结果总是姗姗来迟。</p>
<p>6	熟练掌握某种技能需要足够的耐心。</p>
<p>7	社会改革家雅各布·里斯（Jacob Riis）的名言：“每当我感到无能为力时，我就会去看石匠凿石头，也许他凿了100次，但石头上没有出现裂缝的迹象。然而，在他凿到第101次时，那块石头裂成了两半。我知道这不是最后那次凿击造成的，而是此前连续凿击的结果。”</p>
<p>8	目标是关于你想要达到的结果，而体系是涉及导致这些结果的过程。</p>
<p>9	问题1：赢家和输家心怀相同的目标。</p>
<p>10	问题2：实现一个目标只是短暂的改变。</p>
<p>11	实现一个目标只会暂时改变你的生活。这正是改进这个概念违反直觉之处。</p>
<p>12	假如你只是围绕着结果动脑筋想办法，你只能取得一时的改进。为了取得一劳永逸的成效，你需要解决体系层面上的问题。修正输入端，输出端就会自行修正。</p>
<p>13	问题3：目标束缚了你的幸福感。</p>
<p>14	只要你创建的体系在正常运行，你就会在整个过程中感受到快乐。另外，一个体系取得成功的方式有多种，而不仅仅是你最初想象的那一种。</p>
<p>15	问题4：目标与长远改进的大方向不一致。</p>
<p>16	设定目标的目的是赢得比赛。构建体系的目的是持续参与这项赛事。意在长远的思维方式不会拘泥于具体的目标。这不是为了取得任何单一的成就，而是一个精益求精、日趋进步的循环过程。归根结底，你对这个过程锲而不舍的坚持决定着你的进步。</p>
<p>17	微习惯体系</p>
<p>18	如果你很难改变自己的习惯，问题的根源不是你，而是你的体系。坏习惯循环往复，不是因为你不想改变，而是因为你用来改变的体系存在问题。你要做的是，不求拔高你的目标，但求落实你的体系。</p>
<h4 id="你的习惯如何塑造你的身份">你的习惯如何塑造你的身份</h4>
<p>19	关注整个体系，而非单一目标，这是本书的核心主题之一。</p>
<p>20	这就是“微习惯”一词的含义，也就是说，它是一种有规律的练习或惯常举动，本身微不足道且简单易行，却是不可思议的力量之源；    它也是复合增长体系中的一个组成部分。</p>
<p>21	如果你想要更好的结果，那就别再设定目标，转而全力关注你的体系。不求拔高你的目标，但求落实你的体系。</p>
<p>22	结果意味着你得到了什么，过程意味着你做什么，身份则关系到你的信仰。</p>
<p>23	真正的行为上的改变是身份的改变</p>
<p>24	你可能会出于某种动机而培养一种习惯，但让你长期保持这种习惯的唯一原因是它已经与你的身份融为一体。</p>
<p>25	目标不是阅读一本书，而是成为读者。</p>
<p>​        目标不是跑马拉松，而是成为跑步者。</p>
<p>​        目标不是学习一种乐器，而是成为音乐家。</p>
<h4 id="培养良好习惯的四步法">培养良好习惯的四步法</h4>
<p>26	导致结果满意的行为往往会得以重复，而产生不愉快结果的行为得以重复的概率较低</p>
<p>27	习惯是从经验中学到的心理捷径。从某种意义上来说，习惯只是你过去为解决问题而采取的步骤的记忆。只要条件合适，你就可以调用这种记忆并自动应用相同的解决方案。大脑记忆过去的主要原因是为了预测如何更好地应对未来。</p>
<hr>
<h3 id="第一定律-让它显而易见">第一定律 -- 让它显而易见</h3>
<h4 id="看着不对劲儿的那个人">看着不对劲儿的那个人</h4>
<p>28	心理学家卡尔·荣格（Carl Jung）所说：“除非你让下意识意识化，否则它将支配你的生活，而你会称之为命运。”</p>
<p>29	听到你大声说出的坏习惯会让后果显得更加触手可及。这增加了行动的难度，从而防止自己不知不觉就落入你本想摆脱的窠臼。即使是你只想提醒自己该办哪些事，这种方法也很有用。只需大声说出“明天午饭后，我要去邮局”，就能提高你去的可能性。你以这种方式让自己认识到行动的必要性——而这的确会让你的生活有大改观。</p>
<p>30	行为转变的过程总是始于自觉。像指差确认以及习惯记分卡这类做法会专门帮你认清你的习惯并认识到触发它们的提示，这使得你有可能以对你有益的方式做出回应。</p>
<h4 id="培养新习惯的最佳方式"><strong>培养新习惯的最佳方式</strong></h4>
<p>31	通过说出你的行动，指差确认将你的意识程度从下意识的习惯状态提升到警觉的水平。</p>
<p>32	当你的梦想模糊不清时，你很容易整天任由时间耗费在一些琐事上，无暇顾及为了取得成功而必须做的具体事宜，并且总是能给自己这种状况找借口。</p>
<p>33	你需要给予你的习惯在这个世界上存在的时间和空间。</p>
<p>34	正如作家贾森·茨威格（Jason Zweig）所指出的那样：“很显然，若是缺乏刻意的努力，你永远都不会主动去健身。但是就像听见铃声就流口水的狗一样，条件反射在你身上的作用，就是让你在本该健身却尚未开始的时候感到坐立不安。”</p>
<p>35	行为转变的第一定律是让它显而易见。像执行意图和习惯叠加这样的策略，是为你的习惯创造鲜明的提示，并为何时何地采取行动设计清晰计划的最实用的方法。</p>
<p>36	行为转变的第一定律是让它显而易见。</p>
<p>两个最常见的提示是时间和地点。</p>
<p>创建执行意图是一种策略，你可以用它将新习惯与特定的时间和地点整合。</p>
<p>执行意图的公式是：我将于[时间]在[地点][行为]。</p>
<p>习惯叠加是一种策略，你可以用它来将新习惯与当前习惯整合。</p>
<p>习惯叠加的公式是：继[当前习惯]之后，我将[新习惯]。</p>
<p>原动力被高估，环境往往更重要</p>
<p>37	你的习惯会根据你所在的房间以及你面前的提示而改变</p>
<p>38	将新习惯与新环境联系起来比在老地方建立新习惯容易得多，因为你在老地方会时时处处受到与老习惯相关联的提示的干扰。</p>
<p>39	尽可能避免将一种习惯的情境与另一种习惯的混在一起。</p>
<p>40	我认识一位作家，他的电脑只用于写作，平板只用于阅读，而手机则专门用于社交媒体和短信。每个习惯都应该有个去处。</p>
<p>41	在所有的事物都各安其位、各具用途的稳定环境中，习惯很容易形成。</p>
<h4 id="自我控制的秘密"><strong>自我控制的秘密</strong></h4>
<p>42	毅力、勇气和意志力是取得成功的要素，但是增强这些品质的途径不是期望你自己成为一个自律的人，而是创造一个有纪律的环境。</p>
<p>43	消除坏习惯的最实用的方法之一是避免接触引起它的提示。</p>
<hr>
<h3 id="第二定律-让它有吸引力">第二定律 -- 让它有吸引力</h3>
<h4 id="怎样是习惯不可抗拒">怎样是习惯不可抗拒</h4>
<p>44	让良好习惯的提示显而易见，让不良习惯的提示脱离视线</p>
<p>45	假如你在做一件事的同时得以做另一件你喜爱的事，那么前者很可能会对你产生一定的吸引力。</p>
<h4 id="在习惯形成中亲友所起的作用">在习惯形成中亲友所起的作用</h4>
<p>46	我们将要看到的，就是无论你的文化崇尚什么样的习惯，那些习惯就会成为最有吸引力的行为。</p>
<p>47	法国哲学家蒙田（Michel）曾这样写道：“社会生活的习俗和实践裹挟着我们前行。”</p>
<p>48	培养好习惯的最有效方式之一就是加入一种文化，在这种文化中，你偏爱的行为被认定为是正常行为。</p>
<h4 id="如何找到并消除你坏习惯的根源"><strong>如何找到并消除你坏习惯的根源</strong></h4>
<p>49	渴望只是深层动机的具体表现。你的大脑并非因为渴望吸烟、查看照片或玩电子游戏而进化。在更深层次上，你只是想减少不确定性和缓解焦虑，赢得社会认可和接纳，或者获得一定的社会地位。</p>
<p>50	渴望是一种缺乏某些东西的感觉，是改变你内在状态的愿望。</p>
<p>51	欲望就是你的现状与你设想中的未来状况之间的差别。</p>
<p>52	总而言之，你感受到的特定欲望和你展现出的高频动作，其实都体现着你深藏的、蠢蠢欲动的根本动机。</p>
<p>53	当我们将习惯与积极的情感联系起来时，习惯就有了吸引力，我们有了这种认识就可以为己所用，不断寻找乐趣，同时避免烦心事。</p>
<p>54	重建你的习惯，突出它们的益处而非不足，这种短平快的方式可以改变你的思维方式，并让一个习惯更有吸引力。</p>
<p>55	你可以将“我很紧张”定义为“我很兴奋，肾上腺素的增加帮助我集中注意力。”135</p>
<hr>
<h3 id="第三定律-让它简便易行">第三定律 -- 让它简便易行</h3>
<h4 id="漫步前行但绝不后退">漫步前行，但绝不后退</h4>
<p>56	伏尔泰这样写道：“因追求最佳而丢掉了足够好。”138</p>
<p>57	我们大多数人都是回避批评的专家。遭遇失败或被公开评判令人感觉不好，所以我们倾向于避免落入那种境地。这就是你总是在酝酿却不采取行动的最大原因：你是想让可能遭遇的失败来得晚一些。</p>
<p>58	如果你想掌握一种习惯，关键是从重复开始，无须力求完美。你不必描画出新习惯的每一个特征。你只需要不断练习。这是第三定律的第一条要点：你需要关注的是次数。</p>
<p>59	习惯的形成是一种行为通过重复变得越来越自动化的过程。</p>
<p>60	随着每一次重复，细胞间的信号传递得到改善，神经连接变得更加紧密。</p>
<p>61	乔治·H.刘易斯（George H.Lewes）指出：“人们在学习一门外语、演奏一种乐器或演练尚不熟悉的动作时，会感到难度极大，因为每种感觉必经的通道尚未建立起来；但是，连续不断地重复打通了沟通途径之后，这种困难顿时烟消云散；这些动作变得如此连贯自如，即便心不在焉也能一气呵成。”</p>
<p>62	所有习惯都遵循类似的演变轨迹，从刻苦练习到行动自如，这一过程被称为自动性。自动性是指无须考虑每一个步骤而实施一种行为的能力，146 这种能力发生在下意识起作用的时候。</p>
<h4 id="最省力法则">最省力法则</h4>
<p>63	图省事才是一个聪明而非愚蠢的策略</p>
<p>64	精力是宝贵的，而大脑的设定就是尽一切可能保存精力。</p>
<p>65	让它简便易行的说法不仅仅是做容易的事，其主旨是当其时尽可能确保你可以毫不费力地去做具有长期回报的事。</p>
<p>66	归根结底，为了养成更好的习惯，我们不得不耗费很大精力，设法克服与我们已有的好习惯相关的惰性，同时加大与不良习惯相关的阻力。</p>
<h4 id="怎样利用两分钟规则停止拖延">怎样利用两分钟规则停止拖延</h4>
<p>67	当你开始培养一种新习惯时，它所用时间不应超过两分钟。</p>
<h4 id="怎样让好习惯不可避免坏习惯难以养成">怎样让好习惯不可避免，坏习惯难以养成</h4>
<p>68	成功不是简单地让好习惯简便易行，更重要的是让坏习惯难以延续。</p>
<p>69	破除坏习惯的最好方式就是让它变得不切实际。不断提高其难度，直到你心灰意懒</p>
<p>70	科技给人们的生活带来了一定程度的便利，让你可以随心所欲。你感觉有些饿，叫个外卖就可以让人把食物送到你家门口。你感觉有点无聊，登入社交媒体，你会沉浸在令人眼花缭乱的内容里。当你实际上可以在零付出的情形下满足自己的愿望，你会发现自己不断受到一时冲动的摆布。自动化的缺点是，我们满足于一件接一件地做些不用费脑子的事，再也不想抽时间做些稍有难度但最终更有意义的事。</p>
<p>71	我在工作之余总是禁不住要浏览社交媒体上的内容。我只要感觉有些无聊，就会拿起手机。人们很容易自我安慰说这些做法“只是放松一下”而已，但是随着时间的推移，它们会累积成一个严重的问题。持续不断的“再过一分钟”会妨碍我做任何重要的事。（我不是唯一的一个。一般人每天在社交媒体上平均耗费两个多小时。171 你可以想象一下每年多出的600小时可以做多少有意义的事！）</p>
<hr>
<h3 id="第四定律-让它令人愉悦">第四定律 -- 让它令人愉悦</h3>
<h4 id="行为转变的基本准则">行为转变的基本准则</h4>
<p>72	一般来说，你从一项行动中越快享受到乐趣，你就越应该质疑它是否符合你的长远利益。</p>
<p>73	几乎每个领域的成功都要求你忽略即时奖励，而代之以延迟奖励。</p>
<p>74	凡是长远地看能带给你回报的事，你可以给它添加一点即时快乐；凡是不能的，你可以添加一点即时痛苦。</p>
<p>75	奖励可以启动一种习惯的培养进程，身份则可以维持一种习惯。</p>
<h4 id="怎样天天保持好习惯">怎样天天保持好习惯</h4>
<p>76	习惯追踪具有三方面的功效：其一，创建视觉提示，提醒你采取行动；其二，内在激励机制，因为你清楚地看到了你的进步轨迹，并且不想失去它，以及其三，每当你记录下又一项成功的习惯实例时，你都会享受到满足感。另外，习惯追踪提供了视觉证据，证明你在把自己塑造成为你特别想成为的那类人，这本身就是一种令人感觉愉快的即时、内在满足的形式。</p>
<p>77	问题不在于出差错，而是如果不能做完美，就干脆不做的错误想法。</p>
<p>78	复利的首要规则：除非万不得已，否则永远不要打断它。”</p>
<p>79	千万不要无所事事。不要让亏损蚕食你的复利。</p>
<p>80	度量只有在引导你并辅助大局时才有积极作用，它不应成为主角并让你疲于奔命。每个数字只不过是整个系统中的一条反馈罢了。</p>
<p>81	在我们这个数据驱动的世界里，我们倾向于高估数字的作用，低估任何短暂的、柔性的、难以量化的东西。我们错误地认为只有能够度量的因素才是唯一真实存在的因素，但是仅仅因为你能度量一些东西，并不意味着它们就是最重要的东西。不能仅仅因为一些东西不可测度，就认定它们根本不重要。</p>
<h4 id="问责伙伴何以能改变一切">问责伙伴何以能改变一切</h4>
<p>82	如果你想戒掉不良习惯并避免不健康行为，那就给这类习惯和行为添加即时成本，这样可以有效地降低它们发生的概率。</p>
<p>83	我们之所以难以戒掉坏习惯，就是因为它们在某种程度上迎合了我们的需要。就我所知，加快随这种行为而来的惩戒速度是摆脱这种困境的最佳方式。有行动便有惩罚，不能有丝毫迟滞。</p>
<hr>
<h3 id="高级战术-怎样从单纯的好转向真正的伟大">高级战术 -- 怎样从单纯的好转向真正的伟大</h3>
<h4 id="揭秘天才当基因重要和无关紧要时">揭秘天才（当基因重要和无关紧要时）</h4>
<p>84	经科学分析验证的“五大”性格特征是目前得到公认的性格类别图谱。</p>
<pre><code>1.开放性：从好奇和创造性的一端到谨慎和一丝不苟的另一端。

2.自觉性：从有条理和效率高到随意性和自发性。

3.外向性：从活泼开朗、活力十足到孤独和保守（也就是外向型人格和内向性人格的区别）。

4.亲和性：从待人友好并富于同情心到挑剔和淡漠。

5.神经质：从焦虑不安和敏感多疑到自信、冷静和心态平和。
</code></pre>
<p>85	学会玩一个你胜算大的游戏是保持充沛动力并有成就感的关键。</p>
<p>86	你是否适合一项任务的标志不在于你是否喜欢它，而在于你是否能比大多数人更容易承受这项任务带来的痛苦。当别人觉得苦不堪言时，你却能自得其乐？伤害别人多于伤害你的事，就是你生来就适合做的事</p>
<p>87	“心流”指的是你因为全神贯注地投入到手头的工作，从而忘记了周边世界存在的一种精神状态。</p>
<p>88	我的天性是什么？此刻，你可以暂时忘记你接受的教育，忽略主流社会告诉你的事情，忽略别人对你的期望。扪心自问：“我觉得什么很自然？我何时感觉充满活力？我何时看到了自己的真面目？”不要急于自我评判，也不要刻意讨人欢心。不要犹疑不定或自我批评。只注重乐在其中的感觉。无论何时，只要你感觉真实可信，你前进的方向就是正确的。</p>
<p>89	注自己能否充分发挥自己的潜力，要比与他人攀比收效更显著。人的能力是有限的这一事实，与你是否已达到能力的上限无关。人们常常过于纠结自己能力的极限，以至于放弃了充分调动自己潜能的努力。</p>
<p>90	要确保你的习惯长期令人满意，最好的方法之一就是选择与你的个性和技能相匹配的行为。努力做好容易做的事。</p>
<h4 id="金发女孩准则如何在生活和工作中保持充沛动力">金发女孩准则：如何在生活和工作中保持充沛动力</h4>
<p>91	保持动力和达到最大欲望的途径之一，就是去做“难易程度刚刚好”的事。</p>
<p>92	金发女孩准则指出，人们在处理其能力可及的事务时积极性最高。难易程度适中，刚刚好。</p>
<p>93	做力所能及、难易适中的事，似乎是保持激励水平居高不下的关键所在。</p>
<p>94	归根结底这取决于谁能应付每天枯燥乏味的训练，一遍又一遍地反复做同样的举重动作。</p>
<p>95	真正的成功人士也会和其他人一样感到激情消退。唯一不同的是，尽管感到枯燥乏味，他们仍然想办法坚持下去。</p>
<p>96	成功的最大威胁不是失败，而是倦怠。</p>
<p>97	男人都图新鲜，无论是春风得意的还是郁郁寡欢的，全都急于改变现状。</p>
<p>98	我们都有人生目标并心怀梦想，但是，假如你只在心血来潮或一时兴起时才做出一些努力，那么无论你的目标或梦想是什么，你都不可能取得显著的成果。</p>
<p>99	当你感到心烦意乱、苦不堪言或精疲力竭时，是鼓足干劲还是萌生退意，这是专业人士和业余人士的分水岭。</p>
<p>100	专业人员依照既定计划行事，毫不动摇；业余爱好者则随波逐流，任性而为。专业人士知道对他们来说什么最重要，并有目的地去做；业余爱好者则随生活中的突发情况而变。</p>
<p>101	成为出色的人的必经之路，是无休止地反复做同样的事，且痴心不改。你必须爱上厌倦。</p>
<h4 id="培养好习惯的负面影响">培养好习惯的负面影响</h4>
<p>102	你在鸡毛蒜皮的琐事上耗费的精力越少，你能用在真正重要的事情上的精力就会更多。</p>
<p>103	习惯动作+刻意练习=精通</p>
<p>104	你越是让某种单一信念定义你，当面临生活中的挑战时，你就越难适应。</p>
<p>105	要想减轻随身份丧失而来的负面影响，关键是必须重新定义自己，这样即使你的特定角色发生了变化，你也可以保留身份的重要方面。</p>
<p>106	《道德经》</p>
<pre><code>人之生也柔弱，其死也坚强。

草木之生也柔脆，其死也枯槁。

故坚强者死之徒，柔弱者生之徒。

是以兵强则灭，木强则折。

强大处下，柔弱处上。

——老子
</code></pre>
<p>107	习惯带来了许多好处，但缺点是它们也会让我们陷入以前的思维和行为模式，不能跟上时代前进的步伐。一切都是无常的。生活在不断变化，所以你需要定期检查一下，看看你固有的习惯和信仰是否还在为你服务。</p>
<p>缺乏自我意识是毒药，反思和回顾是解药。</p>
<hr>
<h3 id="结论-获得持久成果的秘诀">结论 -- 获得持久成果的秘诀</h3>
<p>108	成功不是要达到的目标，也不是要跨越的终点线。它是一个让人得以进步的体系、精益求精的过程。</p>
<p>109	幸福是已得到满足的欲望与酝酿中的欲望之间的空当。”247 同样，痛苦则是渴望改变现状与改变得以实现那一刻之间的空当。</p>
<p>110	有足够理由活着的人几乎可以忍受任何生存方式。</p>
<p>111	如果你的动机和欲望足够强大（也就是说，你为什么要行动），即使困难重重，你也会采取行动。</p>
<p>112	痛苦推动进步。所有痛苦的根源是对改变现状的渴望。这也是所有进步的源泉。对改变现状的渴求激励着你采取行动。想得到更多的欲念驱使着人们寻求改进，开发新技术，达到更高的水平。内心涌动着渴望，意味着我们不满意，但动力十足。没有渴望，我们就心满意足，不思进取。</p>
<p>113	你的行为揭示了你想得到一些东西的程度。如果你一直在说要尽快做某件事，但你迟迟不动，那就说明你并不真想要它。是时候正视自己的内心了，你的行为揭示了你真正的动机。</p>
<p>114	失败的痛苦与期望的高度正相关。当欲望很强烈时，结果不符合要求会令人感到痛苦。你一开始并不惦记的东西，得不到也无所谓，但得不到你日思夜想的东西会让你备受打击。这就是为什么人们说：“我不想抱有太大的希望。”</p>
<p>115	欲望负责点火，快乐保持烈火持续燃烧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《素食跑步修行》-- 摘抄]]></title>
        <id>https://hellojunyi.github.io/post/lesslesssu-shi-pao-bu-xiu-xing-greatergreater/</id>
        <link href="https://hellojunyi.github.io/post/lesslesssu-shi-pao-bu-xiu-xing-greatergreater/">
        </link>
        <updated>2021-01-27T15:22:07.000Z</updated>
        <summary type="html"><![CDATA[<p>威廉.詹姆斯</p>
<blockquote>
<p>突破疲惫与沮丧的极限后，</p>
<p>我们或许会感到前所未有的放松与力量</p>
<p>这些潜在的力量不曾被发掘</p>
<p>因为我们从未强迫自己跨越那堵艰难重重的高墙</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p>威廉.詹姆斯</p>
<blockquote>
<p>突破疲惫与沮丧的极限后，</p>
<p>我们或许会感到前所未有的放松与力量</p>
<p>这些潜在的力量不曾被发掘</p>
<p>因为我们从未强迫自己跨越那堵艰难重重的高墙</p>
</blockquote>
<!-- more -->
<p>P3  罗伯斯.佛洛斯特（美国诗人）</p>
<blockquote>
<p>最佳的出路，就在坚持向前的方向</p>
</blockquote>
<p>P14 伊斯雷尔.内贝克（美国Blind Pilot乐队主唱）</p>
<blockquote>
<p>世上唯一真实的界限，是你人生那条起跑线</p>
</blockquote>
<p>P24 佚名</p>
<blockquote>
<p>你永远不会知道到底有多坚强，知道坚强变成你人生唯一的选择</p>
</blockquote>
<p>P33 老子</p>
<blockquote>
<p>千里之行，始于足下。</p>
</blockquote>
<p>P45 科特.寇班（涅槃主唱）</p>
<blockquote>
<p>一心想成为别人，是虚耗自我。</p>
</blockquote>
<p>P55 伊凡.乔伊纳德（攀岩好手）</p>
<blockquote>
<p>理解越多，欲求越少。</p>
</blockquote>
<p>P65  萧伯纳</p>
<blockquote>
<p>做让你畏惧的事。</p>
</blockquote>
<p>P74 甘地（印度领袖）</p>
<blockquote>
<p>力量不是来自身体，而是来自不屈的意志</p>
</blockquote>
<p>P87 约翰.缪尔（美国国家公园之父）</p>
<blockquote>
<p>山峦在呼唤我，我必须往那儿走。</p>
</blockquote>
<p>P97 詹姆斯.盖尔文（美国作家）</p>
<blockquote>
<p>白雪。骄阳。砂石。苍天。他正在做他熟悉、热爱的工作。正是此刻，正值此时。没有紧迫的压力，唯有向前的动力。</p>
</blockquote>
<p>P109  “男子汉”蓝迪.沙瓦吉（美国摔跤手）</p>
<blockquote>
<p>如果你没有站在深渊边缘，就表示你占用太多位置了。</p>
</blockquote>
<p>P124 吐帕克.夏库尔（非裔美国饶舌歌手）</p>
<blockquote>
<p>穿上我的鞋，走一英里，你也会像我一样疯狂。</p>
</blockquote>
<p>P146 道元禅师（普劝坐禅仪）</p>
<blockquote>
<p>不要为得到自由而工作，而要让工作本身变成自由。</p>
</blockquote>
<p>P153 日本谚语</p>
<blockquote>
<p>跌倒七次，要爬起来八次。</p>
</blockquote>
<p>P167 拉拉穆里族谚语</p>
<blockquote>
<p>当你赤脚碰触大地，而且与地球融为一体，表示你可以无穷无尽地跑下去。</p>
</blockquote>
<p>P180 马可.戴维斯（美国田径选手）</p>
<blockquote>
<p>付出多少，就获得多少回报。</p>
</blockquote>
<p>P192 海明威（美国作家）</p>
<blockquote>
<p>生活让我们遍体鳞伤，但到后来，那些受伤的地方会变得更坚强。</p>
</blockquote>
<p>P205 希波克拉底（古希腊医生、西方医学奠基者）</p>
<blockquote>
<p>以食为药，以药为食。</p>
</blockquote>
<p>P224 莱昂纳德.科恩</p>
<blockquote>
<p>万事万物皆有裂痕，有裂痕，光明才得以照进。</p>
</blockquote>
<p>P241 李小龙</p>
<blockquote>
<p>清空思绪，无体，无形，如水一般。</p>
</blockquote>
<p>P250 鲁米（伊斯兰教神秘主义诗人）</p>
<blockquote>
<p>让我们所爱的美，成为我们的作为</p>
</blockquote>
<p>P257 杰里米.科林斯（美国登山艺术家）</p>
<blockquote>
<p>有时候最棒的旅程并非由东往西，也不是从地面攀至顶峰，而是头顶直达心灵。在这个过程中，我们找到了自己。</p>
</blockquote>
]]></content>
    </entry>
</feed>